{"version":3,"sources":["get-size.js","ev-emitter.js","matches-selector.js","Chart.js","utils.js","item.js","outlayer.js","masonry.js","dashboard-charts.js","dashboard.js"],"names":["window","factory","define","amd","module","exports","getSize","getStyleSize","value","num","parseFloat","isValid","indexOf","isNaN","noop","getZeroSize","size","width","height","innerWidth","innerHeight","outerWidth","outerHeight","i","measurementsLength","measurement","measurements","getStyle","elem","style","getComputedStyle","logError","setup","isSetup","div","document","createElement","padding","borderStyle","borderWidth","boxSizing","body","documentElement","appendChild","isBoxSizeOuter","removeChild","querySelector","nodeType","display","offsetWidth","offsetHeight","isBorderBox","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","console","message","error","length","global","EvEmitter","this","proto","prototype","on","eventName","listener","events","_events","listeners","push","once","onceEvents","_onceEvents","onceListeners","off","index","splice","emitEvent","args","isOnce","apply","matchesSelector","matchesMethod","ElemProto","Element","matches","prefixes","prefix","method","selector","f","g","self","Chart","e","t","n","r","s","o","u","a","require","Error","code","l","call",1,2,"getRgba","string","abbr","hex","rgba","per","keyword","rgb","match","parseInt","slice","Math","round","colorNames","scale","getHsla","hsl","alpha","h","getHwb","hwb","w","b","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","rgbString","rgbaString","undefined","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","min","max","str","toString","toUpperCase","name","6",3,"convert","Color","obj","values","hsv","cmyk","setValues","red","lightness","v","whiteness","c","cyan","JSON","stringify","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w1","w2","toJSON","clone","type","result","source","target","prop","hasOwnProperty","spaces","maxes","getValues","space","charAt","chans","capped","sname","Array","svalues","5",4,"rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","m","y","k","rgb2keyword","reverseKeywords","rgb2xyz","x","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","floor","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","forEach",7,"10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","8","9","Bar","context","config","Bubble","Doughnut","Line","PolarArea","Radar","defaultConfig","hover","mode","scales","xAxes","position","id","yAxes","tooltips","callbacks","title","label","tooltipItem","xLabel","yLabel","defaults","scatter","controllers","line","Scatter","helpers","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","extend","dataElementType","elements","Rectangle","initialize","chart","datasetIndex","getMeta","getBarCount","me","barCount","each","data","datasets","dataset","meta","getDatasetMeta","isDatasetVisible","update","reset","rectangle","updateElement","xScale","getScaleForId","xAxisID","yScale","yAxisID","scaleBase","getBasePixel","rectangleElementOptions","options","custom","getDataset","_xScale","_yScale","_datasetIndex","_index","ruler","getRuler","_model","calculateBarX","calculateBarY","labels","datasetLabel","base","calculateBarBase","calculateBarWidth","backgroundColor","getValueAtIndexOrDefault","borderSkipped","borderColor","pivot","stacked","Number","currentDs","currentDsMeta","currentVal","getPixelForValue","tickWidth","datasetCount","getPixelForTick","ticks","categoryWidth","categorySpacing","fullBarWidth","perc","barWidth","barSpacing","barThickness","getBarIndex","j","barIndex","leftTick","isCombo","sumPos","sumNeg","ds","dsMeta","stackedVal","draw","ease","len","easingDecimal","metaData","d","transition","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","tooltipItems","calculateBarHeight","cornerAt","cornerIndex","corners","startCorner","ctx","_chart","vm","_view","halfHeight","topY","bottomY","right","halfStroke","beginPath","fillStyle","strokeStyle","lineWidth","borders","moveTo","lineTo","fill","stroke","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","bubble","dataPoint","Point","points","point","pointElementOptions","dsIndex","getPixelForDecimal","NaN","radius","getRadius","hitRadius","skip","hoverRadius","dataVal","doughnut","animation","animateRotate","animateScale","aspectRatio","legendCallback","text","join","legend","generateLabels","map","arc","arcOpts","bw","hidden","onClick","legendItem","ilen","cutoutPercentage","rotation","circumference","dataLabel","isArray","pie","Arc","linkScales","getRingIndex","ringIndex","chartArea","opts","availableWidth","left","availableHeight","bottom","top","minSize","offset","startAngle","endAngle","start","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","abs","hoverWidth","lineEnabled","getValueOrDefault","showLine","showLines","spanGaps","datasetElementType","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","steppedLine","stepped","cubicInterpolationMode","scaleTop","scaleBottom","scaleZero","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","includeOffset","pointRadius","pointHitRadius","calculatePointY","pointStyle","stackedRightValue","getRightValue","rightValue","capControlPoint","pt","controlPoints","area","filter","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","lineArc","beginAtZero","count","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","duration","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","animationWrapper","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","endTime","canvasHelpers","drawPoint","edgeLength","xOffset","yOffset","drawImage","closePath","SQRT2","fillRect","strokeRect","readUsedSize","property","initCanvas","canvas","renderHeight","getAttribute","renderWidth","_chartjs","initial","displayWidth","displayHeight","releaseCanvas","removeAttribute","setAttribute","acquireContext","item","getElementById","HTMLCanvasElement","getContext","CanvasRenderingContext2D","initConfig","configMerge","types","instances","Controller","instance","uid","_bufferedRender","Object","defineProperty","get","retinaScale","responsive","addResizeListener","parentNode","resize","plugins","notify","bindEvents","ensureScalesHaveIDs","buildOrUpdateControllers","buildScales","updateLayout","resetElements","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","dtype","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","layoutService","newControllers","controller","updateIndex","tooltip","animationDuration","_data","buildOrUpdateElements","updateDatasets","_bufferedRequest","animationOptions","easingFunction","easingEffects","stepDecimal","easeDecimal","boxes","box","getElementAtEvent","Interaction","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","removeResizeListener","toBase64Image","toDataURL","Tooltip","_chartInstance","_options","evt","eventHandler","updateHoverStyle","enabled","hoverOptions","changed","handleEvent","bufferedRequest","lastActive","active","onHover","arrayEquals","listenArrayEvents","array","configurable","enumerable","arrayEvents","res","object","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","addElementAndReset","resyncElements","elementOpts","valueOrDefault","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","configuration","_start","color","err","startVal","tooltipPosition","hasValue","isNumber","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","loopable","callback","reverse","keys","objClone","setFn","_base","extension","baseHasProperty","baseVal","scaleMerge","getScaleDefaults","valueObj","axisType","axisDefaults","defaultValue","where","collection","filterCallback","filtered","scope","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","constructor","Surrogate","__super__","isFinite","almostEquals","epsilon","reduce","NEGATIVE_INFINITY","sign","log10","log","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","range","niceFraction","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","getRelativePosition","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","currentDevicePixelRatio","addEvent","eventType","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","arrayOfEvents","getConstraintWidth","getConstraintHeight","container","clientWidth","cw","clientHeight","ch","el","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","drawRoundedRectangle","quadraticCurveTo","CanvasGradient","defaultColor","iframe","className","cssText","tabIndex","resizer","ticking","contentWindow","insertBefore","firstChild","a0","a1","v0","v1","callCallback","fn","_tArg","colorValue","CanvasPattern","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","center","getCenterPoint","indexMode","x-axis","nearest","sort","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","addBox","removeBox","getMinimumBoxSize","isHorizontal","fullWidth","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","chartAreaHeight","minBoxSizes","horizontal","fitBox","minBoxSize","minBox","scaleMargin","totalLeftBoxesWidth","totalRightBoxesWidth","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","newMaxChartAreaHeight","newMaxChartAreaWidth","getBoxWidth","labelOpts","fontSize","usePointStyle","boxWidth","ci","lineCap","lineDash","lineDashOffset","lineJoin","Legend","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","globalDefault","itemOrDefault","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","fontColor","drawLegendBox","save","isLineWidthZero","setLineDash","offSet","restore","fillText","lh","hitBox","register","beforeInit","legendOpts","_plugins","plugin","unregister","idx","getAll","PluginBase","afterInit","beforeDraw","afterDraw","pluginService","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Ticks","formatters","Scale","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickOpts","userCallback","globalDefaults","optionTicks","tickFontSize","tickFontStyle","tickFontFamily","tickLabelFont","firstRotated","firstWidth","lastWidth","labelRotation","longestTextCache","cosRotation","sinRotation","originalLabelWidth","labelWidth","yLabelWidth","scaleLabelOpts","gridLineOpts","scaleLabelFontSize","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","maxLabelWidth","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","decimal","valueOffset","skipRatio","maxTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFontStyle","scaleLabelFontFamily","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","shouldSkip","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","xLineValue","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","isLeft","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","generators","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","ceil","minMaxDeltaDivisibleByStepSize","numSpaces","logarithmic","tickVal","exp","significand","minNotZero","lastTick","tickValue","logDelta","tickString","numDecimal","toFixed","remain","toExponential","Title","chartOpts","pos","titleX","titleY","titleFont","titleOpts","titleBlock","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xPadding","yPadding","xAlign","yAlign","bodyFontColor","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyAlign","bodyFontSize","bodySpacing","titleFontColor","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontStyle","titleFontSize","_titleAlign","titleAlign","titleSpacing","titleMarginBottom","footerFontColor","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontStyle","footerFontSize","_footerAlign","footerAlign","footerSpacing","footerMarginTop","caretSize","cornerRadius","legendColorBackground","multiKeyBackground","displayColors","getTooltipSize","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleLineCount","footerLineCount","footer","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","caretPadding","paddingAndSize","radiusAndPadding","beforeTitle","labelCount","afterTitle","beforeLabel","labelColor","activeElement","afterLabel","beforeFooter","afterFooter","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","x3","y3","ptX","ptY","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","drawBackground","_lastActive","average","eventPosition","nearestElement","tp","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineToPoint","previousPoint","pointVM","bezierCurveTo","fillPoint","lastDrawnIndex","currentVM","globalOptionLineElements","xRange","yRange","isVertical","getBarBounds","halfWidth","leftX","rightX","corner","bounds","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","innerDimension","valueDimension","LinearScale","LinearScaleBase","IDMatches","valuesPerType","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","handleDirectionalChanges","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","numericGeneratorOptions","fixedStepSize","LogarithmicScale","tickValues","newVal","animate","angleLines","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","LinearRadialScale","getValueCount","drawingArea","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","pointLabelFontSize","pointLabeFontStyle","pointLabeFontFamily","pointLabeFont","largestPossibleRadius","furthestRight","furthestLeft","getPointPosition","angleRadians","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","angleLineOpts","pointLabelOpts","yCenterOffset","yHeight","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","moment","time","units","steps","maxStep","parser","format","unit","displayFormat","isoWeekday","minUnit","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","TimeScale","getLabelMoment","labelMoments","getLabelDiff","labelDiffs","buildLabelDiffs","getMomentStartOf","tick","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","firstTick","momentsForDataset","datasetVisible","scaleLabelDiffs","diff","diffsForDataset","unitScale","scaleSizeInUnits","unitStepSize","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","add","roundedStart","roundedEnd","newTick","tooltipFormat","formattedTick","tickMoments","asSeconds","getMonth","warn","fizzyUIUtils","utils","modulo","makeArray","ary","removeFrom","getParent","getQueryElement","event","filterFindElements","elems","ffElems","HTMLElement","childElems","querySelectorAll","debounceMethod","_class","methodName","threshold","timeoutName","timeout","_this","docReady","readyState","toDashed","replace","$1","$2","toLowerCase","htmlInit","WidgetClass","namespace","dashedNamespace","dataAttr","dataAttrElems","jsDashElems","dataOptionsAttr","jQuery","attr","parse","Outlayer","Item","isEmptyObj","_create","toDashedAll","docElemStyle","transitionProperty","transformProperty","transform","transitionEndEvent","WebkitTransition","vendorProperties","transitionDuration","transitionDelay","create","_transn","ingProperties","clean","onEnd","css","elemStyle","supportedProp","getPosition","isOriginLeft","_getOption","isOriginTop","xValue","yValue","layoutSize","layoutPosition","xProperty","xResetProperty","getXValue","yProperty","yResetProperty","getYValue","percentPosition","_transitionTo","curX","curY","compareX","compareY","didNotMove","setPosition","isTransitioning","transX","transY","transitionStyle","getTranslate","onTransitionEnd","isCleaning","goTo","_nonTransition","_removeStyles","_transition","enableTransition","transitionProps","staggerDelay","onwebkitTransitionEnd","ontransitionend","onotransitionend","dashedVendorProperties","-webkit-transform","propertyName","disableTransition","removeTransitionStyles","cleanStyle","cleanTransitionStyle","stagger","delay","removeElem","remove","hide","reveal","isHidden","transitionEndProperty","getHideRevealTransitionEndProperty","onRevealTransitionEnd","hiddenStyle","visibleStyle","styleProperty","optionStyle","onHideTransitionEnd","queryElement","$element","option","GUID","outlayerGUID","isInitLayout","subclass","Parent","SubClass","getMilliseconds","mult","msUnits","containerStyle","initLayout","originLeft","originTop","resizeContainer","oldOption","compatOptions","layoutInstant","reloadItems","stamps","stamp","canBindResize","bindResize","_itemize","children","itemElems","_filterFindItemElements","itemSelector","getItemElements","_resetLayout","_manageStamps","isInstant","_isLayoutInited","layoutItems","_init","_getMeasurement","_getItemsForLayout","_layoutItems","_postLayout","isIgnored","_emitCompleteOnItems","queue","_getItemLayoutPosition","isLayoutInstant","_processLayoutQueue","updateStagger","_positionItem","isResizingContainer","_getContainerSize","_setContainerMeasure","measure","isWidth","elemSize","dispatchEvent","doneCount","emitArgs","$event","Event","trigger","ignore","getItem","unignore","_find","unstamp","_getBoundingRect","_manageStamp","_boundingRect","_getElementOffset","thisRect","isResizeBound","unbindResize","onresize","needsResizeLayout","hasSizes","addItems","appended","prepended","previousItems","revealItemElements","getItems","hideItemElements","removeItems","removeData","Layout","bridget","ms","Masonry","fitWidth","measureColumns","colYs","cols","maxY","getContainerWidth","columnWidth","firstItem","firstItemElem","containerWidth","gutter","excess","mathMethod","isFitWidth","remainder","colSpan","colGroup","_getColGroup","minimumY","shortColIndex","setHeight","setSpan","groupCount","groupColYs","stampSize","firstX","lastX","firstCol","lastCol","stampMaxY","_getContainerFitWidth","unusedCols","previousWidth","DashboardCharts","getNextColorFromPallete","colorPallete","nextColorIndex","configureChartData","chartData","activate","$","_","formattedData","formatted_data","toLocaleString","init","CHART_CONFIGS","$button","url","ajax","dataType","success","ok","dismissTarget","Messages","enqueue"],"mappings":"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","file":"dashboard.js","sourcesContent":["/*!\n * getSize v2.0.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false, console: false */\n\n( function( window, factory ) {\n  'use strict';\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( function() {\n      return factory();\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See http://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n\n  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;\n  body.removeChild( div );\n\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/**\n * EvEmitter v1.0.3\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var i = 0;\n  var listener = listeners[i];\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  while ( listener ) {\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n    // get next listener\n    i += isOnce ? 0 : 1;\n    listener = listeners[i];\n  }\n\n  return this;\n};\n\nreturn EvEmitter;\n\n}));\n","/**\n * matchesSelector v2.0.1\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.4.0\n *\n * Copyright 2016 Nick Downie\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/* MIT license */\r\nvar colorNames = require(6);\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n},{\"6\":6}],3:[function(require,module,exports){\n/* MIT license */\r\nvar convert = require(5);\r\nvar string = require(2);\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\n},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],5:[function(require,module,exports){\nvar conversions = require(4);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"4\":4}],6:[function(require,module,exports){\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n},{}],7:[function(require,module,exports){\n/**\n * @namespace Chart\n */\nvar Chart = require(28)();\n\nrequire(26)(Chart);\nrequire(22)(Chart);\nrequire(25)(Chart);\nrequire(21)(Chart);\nrequire(23)(Chart);\nrequire(24)(Chart);\nrequire(29)(Chart);\nrequire(33)(Chart);\nrequire(31)(Chart);\nrequire(34)(Chart);\nrequire(32)(Chart);\nrequire(35)(Chart);\nrequire(30)(Chart);\nrequire(27)(Chart);\nrequire(36)(Chart);\n\nrequire(37)(Chart);\nrequire(38)(Chart);\nrequire(39)(Chart);\nrequire(40)(Chart);\n\nrequire(43)(Chart);\nrequire(41)(Chart);\nrequire(42)(Chart);\nrequire(44)(Chart);\nrequire(45)(Chart);\nrequire(46)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire(15)(Chart);\nrequire(16)(Chart);\nrequire(17)(Chart);\nrequire(18)(Chart);\nrequire(19)(Chart);\nrequire(20)(Chart);\n\nrequire(8)(Chart);\nrequire(9)(Chart);\nrequire(10)(Chart);\nrequire(11)(Chart);\nrequire(12)(Chart);\nrequire(13)(Chart);\nrequire(14)(Chart);\n\nwindow.Chart = module.exports = Chart;\n\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"39\":39,\"40\":40,\"41\":41,\"42\":42,\"43\":43,\"44\":44,\"45\":45,\"46\":46,\"8\":8,\"9\":9}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-1'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem) {\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Register the default config for this type\n\tChart.defaults.scatter = defaultConfig;\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear'\n\t\t\t}]\n\t\t}\n\t};\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Rectangle,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\n\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\tthis.getMeta().bar = true;\n\t\t},\n\n\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\n\t\tgetBarCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar barCount = 0;\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (meta.bar && me.chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\t++barCount;\n\t\t\t\t}\n\t\t\t}, me);\n\t\t\treturn barCount;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t}, me);\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index);\n\t\t\trectangle._model = {\n\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\n\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\twidth: me.calculateBarWidth(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar base = 0;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, 0) : Math.max(currentVal, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn yScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar datasetCount = me.getBarCount();\n\n\t\t\tvar tickWidth;\n\n\t\t\tif (xScale.options.type === 'category') {\n\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\n\t\t\t} else {\n\t\t\t\t// Average width\n\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\n\t\t\t}\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\n\n\t\t\tif (xScale.ticks.length !== me.chart.data.labels.length) {\n\t\t\t\tvar perc = xScale.ticks.length / me.chart.data.labels.length;\n\t\t\t\tfullBarWidth = fullBarWidth * perc;\n\t\t\t}\n\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tdatasetCount: datasetCount,\n\t\t\t\ttickWidth: tickWidth,\n\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarWidth: function(ruler) {\n\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\n\t\t\tif (xScale.options.barThickness) {\n\t\t\t\treturn xScale.options.barThickness;\n\t\t\t}\n\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\n\t\t},\n\n\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\n\t\tgetBarIndex: function(datasetIndex) {\n\t\t\tvar barIndex = 0;\n\t\t\tvar meta, j;\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tmeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++barIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barIndex;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\n\t\t\tif (xScale.options.stacked) {\n\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\n\t\t\t}\n\n\t\t\treturn leftTick +\n\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barWidth * barIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * barIndex);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (yScale.options.stacked) {\n\n\t\t\t\tvar sumPos = 0,\n\t\t\t\t\tsumNeg = 0;\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar metaData = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar i, len;\n\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tvar d = dataset.data[i];\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\n\t});\n\n\n\t// including horizontalBar in the bar file, instead of a file of its own\n\t// it extends bar (like pie extends doughnut)\n\tChart.defaults.horizontalBar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'bottom'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\tposition: 'left',\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\telements: {\n\t\t\trectangle: {\n\t\t\t\tborderSkipped: 'left'\n\t\t\t}\n\t\t},\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index);\n\t\t\trectangle._model = {\n\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\theight: me.calculateBarHeight(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\t\t\trectangle.draw = function() {\n\t\t\t\tvar ctx = this._chart.ctx;\n\t\t\t\tvar vm = this._view;\n\n\t\t\t\tvar halfHeight = vm.height / 2,\n\t\t\t\t\ttopY = vm.y - halfHeight,\n\t\t\t\t\tbottomY = vm.y + halfHeight,\n\t\t\t\t\tright = vm.base - (vm.base - vm.x),\n\t\t\t\t\thalfStroke = vm.borderWidth / 2;\n\n\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\t\tif (vm.borderWidth) {\n\t\t\t\t\ttopY += halfStroke;\n\t\t\t\t\tbottomY -= halfStroke;\n\t\t\t\t\tright += halfStroke;\n\t\t\t\t}\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t\t// | 1 2 |\n\t\t\t\t// | 0 3 |\n\t\t\t\tvar corners = [\n\t\t\t\t\t[vm.base, bottomY],\n\t\t\t\t\t[vm.base, topY],\n\t\t\t\t\t[right, topY],\n\t\t\t\t\t[right, bottomY]\n\t\t\t\t];\n\n\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\n\t\t\t\tif (startCorner === -1) {\n\t\t\t\t\tstartCorner = 0;\n\t\t\t\t}\n\n\t\t\t\tfunction cornerAt(cornerIndex) {\n\t\t\t\t\treturn corners[(startCorner + cornerIndex) % 4];\n\t\t\t\t}\n\n\t\t\t\t// Draw rectangle from 'startCorner'\n\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\n\t\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\n\t\t\t\t}\n\n\t\t\t\tctx.fill();\n\t\t\t\tif (vm.borderWidth) {\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar base = 0;\n\n\t\t\tif (xScale.options.stacked) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, 0) : Math.max(currentVal, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn xScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar datasetCount = me.getBarCount();\n\n\t\t\tvar tickHeight;\n\t\t\tif (yScale.options.type === 'category') {\n\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\n\t\t\t} else {\n\t\t\t\t// Average width\n\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\n\t\t\t}\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\n\n\t\t\tif (yScale.ticks.length !== me.chart.data.labels.length) {\n\t\t\t\tvar perc = yScale.ticks.length / me.chart.data.labels.length;\n\t\t\t\tfullBarHeight = fullBarHeight * perc;\n\t\t\t}\n\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tdatasetCount: datasetCount,\n\t\t\t\ttickHeight: tickHeight,\n\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\tbarHeight: barHeight,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarHeight: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar yScale = me.getScaleForId(me.getMeta().yAxisID);\n\t\t\tif (yScale.options.barThickness) {\n\t\t\t\treturn yScale.options.barThickness;\n\t\t\t}\n\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (xScale.options.stacked) {\n\n\t\t\t\tvar sumPos = 0,\n\t\t\t\t\tsumNeg = 0;\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn xScale.getPixelForValue(value);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\n\t\t\t}\n\n\t\t\treturn topTick +\n\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barHeight * barIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * barIndex);\n\t\t}\n\t});\n};\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bubble = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar dsIndex = me.index;\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: dsIndex,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\n\t\t\t\t\t// Appearance\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trick to reset the styles of the point\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\n\n\t\t\tvar model = point._model;\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\tgetRadius: function(value) {\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\n\n\t\t\t// Radius\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\n\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\n\t\t}\n\t});\n};\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tdefaults = Chart.defaults;\n\n\tdefaults.doughnut = {\n\t\tanimation: {\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\tanimateRotate: true,\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\tanimateScale: false\n\t\t},\n\t\taspectRatio: 1,\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// The percentage of the chart that we cut out of the middle.\n\t\tcutoutPercentage: 50,\n\n\t\t// The rotation of the chart, where the first data arc begins.\n\t\trotation: Math.PI * -0.5,\n\n\t\t// The total circumference of the chart.\n\t\tcircumference: Math.PI * 2.0,\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataLabel += value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn dataLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tdefaults.pie = helpers.clone(defaults.doughnut);\n\thelpers.extend(defaults.pie, {\n\t\tcutoutPercentage: 0\n\t});\n\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\toffset = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tmeta = me.getMeta(),\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\tcircumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\tdataset = me.getDataset(),\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(elements) {\n\t\t\tvar max = 0,\n\t\t\t\tindex = this.index,\n\t\t\t\tlength = elements.length,\n\t\t\t\tborderWidth,\n\t\t\t\thoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.line = {\n\t\tshowLines: true,\n\t\tspanGaps: false,\n\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tid: 'x-axis-0'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t}\n\t};\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderWidth) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (dataset.pointBorderWidth) {\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (dataset.borderWidth) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, ilen;\n\n\t\t\t// Transition Point Locations\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t}\n\n\t\t\t// Transition and Draw the line\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.polarArea = {\n\n\t\tscale: {\n\t\t\ttype: 'radialLinear',\n\t\t\tlineArc: true, // so that lines are circular\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: true\n\t\t\t}\n\t\t},\n\n\t\t// Boolean - Whether to animate the rotation of the chart\n\t\tanimation: {\n\t\t\tanimateRotate: true,\n\t\t\tanimateScale: true\n\t\t},\n\n\t\tstartAngle: -0.5 * Math.PI,\n\t\taspectRatio: 1,\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.radar = {\n\t\taspectRatio: 1,\n\t\tscale: {\n\t\t\ttype: 'radialLinear'\n\t\t},\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0 // no bezier in radar\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePosition()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar easingDecimal = ease || 1;\n\n\t\t\t// Transition Point Locations\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.transition(easingDecimal);\n\t\t\t});\n\n\t\t\t// Transition and Draw the line\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\n\t\t\t// Draw the points\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.draw();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n},{}],21:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.animation = {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t};\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @function Chart.animationService.addAnimation\n\t\t * @param chartInstance {ChartController} the chart to animate\n\t\t * @param animationObject {IAnimation} the animation that we will animate\n\t\t * @param duration {Number} length of animation in ms\n\t\t * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchartInstance.animating = true;\n\t\t\t}\n\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (me.animations.length === 1) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchartInstance.animating = false;\n\t\t\t}\n\t\t},\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\twhile (i < me.animations.length) {\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t}\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// executed the last frame. Remove the animation.\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\n\n\t\t\t\t\tme.animations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\n\n\t\t\tme.dropFrames += dropFrames;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t}\n\t};\n};\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\t// Global Chart canvas helpers object for drawing items to canvas\n\tvar helpers = Chart.canvasHelpers = {};\n\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (typeof pointStyle === 'object') {\n\t\t\ttype = pointStyle.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (pointStyle) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t};\n};\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * The \"used\" size is the final value of a dimension property after all calculations have\n\t * been performed. This method uses the computed style of `element` but returns undefined\n\t * if the computed style is not expressed in pixels. That can happen in some cases where\n\t * `element` has a size relative to its parent and this last one is not yet displayed,\n\t * for example because of `display: none` on a parent node.\n\t * TODO(SB) Move this method in the upcoming core.platform class.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n\t * @returns {Number} Size in pixels or undefined if unknown.\n\t */\n\tfunction readUsedSize(element, property) {\n\t\tvar value = helpers.getStyle(element, property);\n\t\tvar matches = value && value.match(/(\\d+)px/);\n\t\treturn matches? Number(matches[1]) : undefined;\n\t}\n\n\t/**\n\t * Initializes the canvas style and render size without modifying the canvas display size,\n\t * since responsiveness is handled by the controller.resize() method. The config is used\n\t * to determine the aspect ratio to apply in case no explicit height has been specified.\n\t * TODO(SB) Move this method in the upcoming core.platform class.\n\t */\n\tfunction initCanvas(canvas, config) {\n\t\tvar style = canvas.style;\n\n\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\t\tvar renderHeight = canvas.getAttribute('height');\n\t\tvar renderWidth = canvas.getAttribute('width');\n\n\t\t// Chart.js modifies some canvas values that we want to restore on destroy\n\t\tcanvas._chartjs = {\n\t\t\tinitial: {\n\t\t\t\theight: renderHeight,\n\t\t\t\twidth: renderWidth,\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: style.display,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\twidth: style.width\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Force canvas to display as block to avoid extra space caused by inline\n\t\t// elements, which would interfere with the responsive resize process.\n\t\t// https://github.com/chartjs/Chart.js/issues/2538\n\t\tstyle.display = style.display || 'block';\n\n\t\tif (renderWidth === null || renderWidth === '') {\n\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.width = displayWidth;\n\t\t\t}\n\t\t}\n\n\t\tif (renderHeight === null || renderHeight === '') {\n\t\t\tif (canvas.style.height === '') {\n\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t\t} else {\n\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\t\tif (displayWidth !== undefined) {\n\t\t\t\t\tcanvas.height = displayHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn canvas;\n\t}\n\n\t/**\n\t * Restores the canvas initial state, such as render/display sizes and style.\n\t * TODO(SB) Move this method in the upcoming core.platform class.\n\t */\n\tfunction releaseCanvas(canvas) {\n\t\tif (!canvas._chartjs) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas._chartjs.initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (value === undefined || value === null) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas._chartjs;\n\t}\n\n\t/**\n\t * TODO(SB) Move this method in the upcoming core.platform class.\n\t */\n\tfunction acquireContext(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\tif (item instanceof HTMLCanvasElement) {\n\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tvar context = item.getContext && item.getContext('2d');\n\t\t\tif (context instanceof CanvasRenderingContext2D) {\n\t\t\t\tinitCanvas(item, config);\n\t\t\t\treturn context;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * @class Chart.Controller\n\t * The main controller of a chart.\n\t */\n\tChart.Controller = function(item, config, instance) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tinstance.ctx = context;\n\t\tinstance.canvas = canvas;\n\t\tinstance.config = config;\n\t\tinstance.width = width;\n\t\tinstance.height = height;\n\t\tinstance.aspectRatio = height? width / height : null;\n\n\t\tme.id = helpers.uid();\n\t\tme.chart = instance;\n\t\tme.config = config;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn me;\n\t\t}\n\n\t\thelpers.retinaScale(instance);\n\n\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\n\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\n\t\t// that the user is still able to create a chart without iframe when responsive is false.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\thelpers.addResizeListener(canvas.parentNode, function() {\n\t\t\t\tme.resize();\n\t\t\t});\n\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\tme.initialize();\n\n\t\treturn me;\n\t};\n\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller */ {\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tChart.plugins.notify('beforeInit', [me]);\n\n\t\t\tme.bindEvents();\n\n\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\n\t\t\t// are built\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateControllers();\n\t\t\tme.buildScales();\n\t\t\tme.updateLayout();\n\t\t\tme.resetElements();\n\t\t\tme.initToolTip();\n\t\t\tme.update();\n\n\t\t\t// After init plugin notification\n\t\t\tChart.plugins.notify('afterInit', [me]);\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.clear(this.chart);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\n\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\tcanvas.height = chart.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(chart);\n\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tChart.plugins.notify('resize', [me, newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (me.options.onResize) {\n\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tif (!silent) {\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tupdateLayout: function() {\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tif (!meta.type) {\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t}\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\tif (types.length > 1) {\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @method resetElements\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t* @method reset\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(animationDuration, lazy) {\n\t\t\tvar me = this;\n\t\t\tChart.plugins.notify('beforeUpdate', [me]);\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tChart.layoutService.update(me, me.chart.width, me.chart.height);\n\n\t\t\t// Apply changes to the datasets that require the scales to have been calculated i.e BorderColor changes\n\t\t\tChart.plugins.notify('afterScaleUpdate', [me]);\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tChart.plugins.notify('afterUpdate', [me]);\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tlazy: lazy,\n\t\t\t\t\tduration: animationDuration\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(animationDuration, lazy);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @method beforeDatasetsUpdate\n\t\t * @description Called before all datasets are updated. If a plugin returns false,\n\t\t * the datasets update will be cancelled until another chart update is triggered.\n\t\t * @param {Object} instance the chart instance being updated.\n\t\t * @returns {Boolean} false to cancel the datasets update.\n\t\t * @memberof Chart.PluginBase\n\t\t * @since version 2.1.5\n\t\t * @instance\n\t\t */\n\n\t\t/**\n\t\t * @method afterDatasetsUpdate\n\t\t * @description Called after all datasets have been updated. Note that this\n\t\t * extension will not be called if the datasets update has been cancelled.\n\t\t * @param {Object} instance the chart instance being updated.\n\t\t * @memberof Chart.PluginBase\n\t\t * @since version 2.1.5\n\t\t * @instance\n\t\t */\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate\n\t\t * extension, in which case no datasets will be updated and the afterDatasetsUpdate\n\t\t * notification will be skipped.\n\t\t * @protected\n\t\t * @instance\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen;\n\n\t\t\tif (Chart.plugins.notify('beforeDatasetsUpdate', [me])) {\n\t\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t\t}\n\n\t\t\t\tChart.plugins.notify('afterDatasetsUpdate', [me]);\n\t\t\t}\n\t\t},\n\n\t\trender: function(duration, lazy) {\n\t\t\tvar me = this;\n\t\t\tChart.plugins.notify('beforeRender', [me]);\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\tanimation.easing = animationOptions.easing;\n\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\n\t\t\t\t\tanimationOptions.onComplete.call(me);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tme.clear();\n\n\t\t\tChart.plugins.notify('beforeDraw', [me, easingDecimal]);\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tChart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\n\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(ease);\n\t\t\t\t}\n\t\t\t}, me, true);\n\n\t\t\tChart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\n\n\t\t\t// Finally draw the tooltip\n\t\t\tme.tooltip.transition(easingDecimal).draw();\n\n\t\t\tChart.plugins.notify('afterDraw', [me, easingDecimal]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Chart.Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.dataset(this, e);\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.chart.canvas;\n\t\t\tvar meta, i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tmeta = me.getDatasetMeta(i);\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.destroy();\n\t\t\t\t\tmeta.controller = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\thelpers.unbindEvents(me, me.events);\n\t\t\t\thelpers.removeResizeListener(canvas.parentNode);\n\t\t\t\thelpers.clear(me.chart);\n\t\t\t\treleaseCanvas(canvas);\n\t\t\t\tme.chart.canvas = null;\n\t\t\t\tme.chart.ctx = null;\n\t\t\t}\n\n\t\t\tChart.plugins.notify('destroy', [me]);\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_chartInstance: me,\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t\tme.tooltip.initialize();\n\t\t},\n\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.bindEvents(me, me.options.events, function(evt) {\n\t\t\t\tme.eventHandler(evt);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar legend = me.legend;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar hoverOptions = me.options.hover;\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\tchanged |= legend && legend.handleEvent(e);\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(hoverOptions.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * param e {Event} the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// On Hover hook\n\t\t\tif (hoverOptions.onHover) {\n\t\t\t\thoverOptions.onHover.call(me, me.active);\n\t\t\t}\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\toptions.onClick.call(me, e, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n};\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\tdraw: function(ease) {\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, len;\n\t\t\tvar metaData = this.getMeta().data;\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i=0; i<count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.elements = {};\n\n\tChart.Element = function(configuration) {\n\t\thelpers.extend(this, configuration);\n\t\tthis.initialize.apply(this, arguments);\n\t};\n\n\thelpers.extend(Chart.Element.prototype, {\n\n\t\tinitialize: function() {\n\t\t\tthis.hidden = false;\n\t\t},\n\n\t\tpivot: function() {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\t\t\tme._start = helpers.clone(me._view);\n\t\t\treturn me;\n\t\t},\n\n\t\ttransition: function(ease) {\n\t\t\tvar me = this;\n\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\n\t\t\t// No animation -> No Transition\n\t\t\tif (ease === 1) {\n\t\t\t\tme._view = me._model;\n\t\t\t\tme._start = null;\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tif (!me._start) {\n\t\t\t\tme.pivot();\n\t\t\t}\n\n\t\t\thelpers.each(me._model, function(value, key) {\n\n\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t// Init if doesn't exist\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// No unnecessary computations\n\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t// Color transitions if possible\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// Number transitions\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t// Everything else\n\t\t\t\t} else {\n\t\t\t\t\tme._view[key] = value;\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn me;\n\t\t},\n\n\t\ttooltipPosition: function() {\n\t\t\treturn {\n\t\t\t\tx: this._model.x,\n\t\t\t\ty: this._model.y\n\t\t\t};\n\t\t},\n\n\t\thasValue: function() {\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t}\n\t});\n\n\tChart.Element.extend = helpers.inherits;\n\n};\n\n},{}],26:[function(require,module,exports){\n/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require(3);\n\nmodule.exports = function(Chart) {\n\t// Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t// -- Basic js utility methods\n\thelpers.each = function(loopable, callback, self, reverse) {\n\t\t// Check to see if null or undefined firstly.\n\t\tvar i, len;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof loopable === 'object') {\n\t\t\tvar keys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t};\n\thelpers.clone = function(obj) {\n\t\tvar objClone = {};\n\t\thelpers.each(obj, function(value, key) {\n\t\t\tif (helpers.isArray(value)) {\n\t\t\t\tobjClone[key] = value.slice(0);\n\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\tobjClone[key] = helpers.clone(value);\n\t\t\t} else {\n\t\t\t\tobjClone[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn objClone;\n\t};\n\thelpers.extend = function(base) {\n\t\tvar setFn = function(value, key) {\n\t\t\tbase[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn base;\n\t};\n\t// Need a special merge function to chart configs since they are now grouped\n\thelpers.configMerge = function(_base) {\n\t\tvar base = helpers.clone(_base);\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\n\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\n\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\n\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\n\t\t\t\t} else if (baseHasProperty\n\t\t\t\t\t\t&& typeof baseVal === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(baseVal)\n\t\t\t\t\t\t&& baseVal !== null\n\t\t\t\t\t\t&& typeof value === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(value)) {\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\n\t\t\t\t} else {\n\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\tbase[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.scaleMerge = function(_base, extension) {\n\t\tvar base = helpers.clone(_base);\n\n\t\thelpers.each(extension, function(value, key) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t// These properties are arrays of items\n\t\t\t\tif (base.hasOwnProperty(key)) {\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Type is the same\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbase[key] = [];\n\t\t\t\t\thelpers.each(value, function(valueObj) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\n\t\t\t} else {\n\t\t\t\t// can just overwrite the value in this case\n\t\t\t\tbase[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tif (helpers.isArray(value)) {\n\t\t\treturn index < value.length ? value[index] : defaultValue;\n\t\t}\n\n\t\treturn value;\n\t};\n\thelpers.getValueOrDefault = function(value, defaultValue) {\n\t\treturn value === undefined ? defaultValue : value;\n\t};\n\thelpers.indexOf = Array.prototype.indexOf?\n\t\tfunction(array, item) {\n\t\t\treturn array.indexOf(item);\n\t\t}:\n\t\tfunction(array, item) {\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (array[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.inherits = function(extensions) {\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\n\t\treturn ChartElement;\n\t};\n\thelpers.noop = function() {};\n\thelpers.uid = (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}());\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\treturn Math.log(x) / Math.LN10;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\n\t\t\tcurrent = middlePoint,\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tpointCurrent.deltaK = (pointAfter.model.y - pointCurrent.model.y) / (pointAfter.model.x - pointCurrent.model.x);\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Easing functions adapted from Robert Penner's easing equations\n\t// http://www.robertpenner.com/easing/\n\tvar easingEffects = helpers.easingEffects = {\n\t\tlinear: function(t) {\n\t\t\treturn t;\n\t\t},\n\t\teaseInQuad: function(t) {\n\t\t\treturn t * t;\n\t\t},\n\t\teaseOutQuad: function(t) {\n\t\t\treturn -1 * t * (t - 2);\n\t\t},\n\t\teaseInOutQuad: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t},\n\t\teaseInCubic: function(t) {\n\t\t\treturn t * t * t;\n\t\t},\n\t\teaseOutCubic: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t},\n\t\teaseInOutCubic: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t},\n\t\teaseInQuart: function(t) {\n\t\t\treturn t * t * t * t;\n\t\t},\n\t\teaseOutQuart: function(t) {\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t},\n\t\teaseInOutQuart: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t},\n\t\teaseInQuint: function(t) {\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t},\n\t\teaseOutQuint: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t},\n\t\teaseInOutQuint: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t},\n\t\teaseInSine: function(t) {\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t},\n\t\teaseOutSine: function(t) {\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t},\n\t\teaseInOutSine: function(t) {\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t},\n\t\teaseInExpo: function(t) {\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t},\n\t\teaseOutExpo: function(t) {\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t},\n\t\teaseInOutExpo: function(t) {\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (t === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t}\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t},\n\t\teaseInCirc: function(t) {\n\t\t\tif (t >= 1) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t},\n\t\teaseOutCirc: function(t) {\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t},\n\t\teaseInOutCirc: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t}\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t},\n\t\teaseInElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t},\n\t\teaseOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t},\n\t\teaseInOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) === 2) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) {\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t},\n\t\teaseInBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t},\n\t\teaseOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t},\n\t\teaseInOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t},\n\t\teaseInBounce: function(t) {\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t},\n\t\teaseOutBounce: function(t) {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t}\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t},\n\t\teaseInOutBounce: function(t) {\n\t\t\tif (t < 1 / 2) {\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t}\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t}\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\thelpers.cancelAnimFrame = (function() {\n\t\treturn window.cancelAnimationFrame ||\n\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\twindow.oCancelAnimationFrame ||\n\t\t\twindow.msCancelAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt,\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\thelpers.addEvent = function(node, eventType, method) {\n\t\tif (node.addEventListener) {\n\t\t\tnode.addEventListener(eventType, method);\n\t\t} else if (node.attachEvent) {\n\t\t\tnode.attachEvent('on' + eventType, method);\n\t\t} else {\n\t\t\tnode['on' + eventType] = method;\n\t\t}\n\t};\n\thelpers.removeEvent = function(node, eventType, handler) {\n\t\tif (node.removeEventListener) {\n\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t} else if (node.detachEvent) {\n\t\t\tnode.detachEvent('on' + eventType, handler);\n\t\t} else {\n\t\t\tnode['on' + eventType] = helpers.noop;\n\t\t}\n\t};\n\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\n\t\t// Create the events object if it's not already present\n\t\tvar events = chartInstance.events = chartInstance.events || {};\n\n\t\thelpers.each(arrayOfEvents, function(eventName) {\n\t\t\tevents[eventName] = function() {\n\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t};\n\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\n\t\t});\n\t};\n\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\n\t\tvar canvas = chartInstance.chart.canvas;\n\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\n\t\t\thelpers.removeEvent(canvas, eventName, handler);\n\t\t});\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof(styleValue) === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tcanvas.style.height = height + 'px';\n\t\tcanvas.style.width = width + 'px';\n\t};\n\t// -- Canvas methods\n\thelpers.clear = function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t};\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\t};\n\thelpers.color = function(c) {\n\t\tif (!color) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn c;\n\t\t}\n\n\t\t/* global CanvasGradient */\n\t\tif (c instanceof CanvasGradient) {\n\t\t\treturn color(Chart.defaults.global.defaultColor);\n\t\t}\n\n\t\treturn color(c);\n\t};\n\thelpers.addResizeListener = function(node, callback) {\n\t\tvar iframe = document.createElement('iframe');\n\t\tiframe.className = 'chartjs-hidden-iframe';\n\t\tiframe.style.cssText =\n\t\t\t'display:block;'+\n\t\t\t'overflow:hidden;'+\n\t\t\t'border:0;'+\n\t\t\t'margin:0;'+\n\t\t\t'top:0;'+\n\t\t\t'left:0;'+\n\t\t\t'bottom:0;'+\n\t\t\t'right:0;'+\n\t\t\t'height:100%;'+\n\t\t\t'width:100%;'+\n\t\t\t'position:absolute;'+\n\t\t\t'pointer-events:none;'+\n\t\t\t'z-index:-1;';\n\n\t\t// Prevent the iframe to gain focus on tab.\n\t\t// https://github.com/chartjs/Chart.js/issues/3090\n\t\tiframe.tabIndex = -1;\n\n\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\n\t\tvar stub = node._chartjs = {\n\t\t\tresizer: iframe,\n\t\t\tticking: false\n\t\t};\n\n\t\t// Throttle the callback notification until the next animation frame.\n\t\tvar notify = function() {\n\t\t\tif (!stub.ticking) {\n\t\t\t\tstub.ticking = true;\n\t\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tif (stub.resizer) {\n\t\t\t\t\t\tstub.ticking = false;\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\n\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\n\t\t// https://github.com/chartjs/Chart.js/issues/3521\n\t\thelpers.addEvent(iframe, 'load', function() {\n\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', notify);\n\n\t\t\t// The iframe size might have changed while loading, which can also\n\t\t\t// happen if the size has been changed while detached from the DOM.\n\t\t\tnotify();\n\t\t});\n\n\t\tnode.insertBefore(iframe, node.firstChild);\n\t};\n\thelpers.removeResizeListener = function(node) {\n\t\tif (!node || !node._chartjs) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iframe = node._chartjs.resizer;\n\t\tif (iframe) {\n\t\t\tiframe.parentNode.removeChild(iframe);\n\t\t\tnode._chartjs.resizer = null;\n\t\t}\n\n\t\tdelete node._chartjs;\n\t};\n\thelpers.isArray = Array.isArray?\n\t\tfunction(obj) {\n\t\t\treturn Array.isArray(obj);\n\t\t} :\n\t\tfunction(obj) {\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\n\t\t};\n\t// ! @see http://stackoverflow.com/a/14853974\n\thelpers.arrayEquals = function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\thelpers.callCallback = function(fn, args, _tArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\tfn.apply(_tArg, args);\n\t\t}\n\t};\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n},{\"3\":3}],27:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Helper function to traverse all of the visible elements in the chart\n\t * @param chart {chart} the chart\n\t * @param handler {Function} the callback to execute for each visible item\n\t */\n\tfunction parseVisibleItems(chart, handler) {\n\t\tvar datasets = chart.data.datasets;\n\t\tvar meta, i, j, ilen, jlen;\n\n\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\t\tvar element = meta.data[j];\n\t\t\t\tif (!element._view.skip) {\n\t\t\t\t\thandler(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to get the items that intersect the event position\n\t * @param items {ChartElement[]} elements to filter\n\t * @param position {Point} the point to be nearest to\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getIntersectItems(chart, position) {\n\t\tvar elements = [];\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\n\t * @param chart {Chart} the chart to look at elements from\n\t * @param position {Point} the point to be nearest to\n\t * @param intersect {Boolean} if true, only consider items that intersect the position\n\t * @param distanceMetric {Function} Optional function to provide the distance between\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar nearestItems = [];\n\n\t\tif (!distanceMetric) {\n\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\n\t\t}\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar center = element.getCenterPoint();\n\t\t\tvar distance = distanceMetric(position, center);\n\n\t\t\tif (distance < minDistance) {\n\t\t\t\tnearestItems = [element];\n\t\t\t\tminDistance = distance;\n\t\t\t} else if (distance === minDistance) {\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\t\tnearestItems.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn nearestItems;\n\t}\n\n\tfunction indexMode(chart, e, options) {\n\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\tvar distanceMetric = function(pt1, pt2) {\n\t\t\treturn Math.abs(pt1.x - pt2.x);\n\t\t};\n\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\t\tvar elements = [];\n\n\t\tif (!items.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\n\t\t\t\t\telement = meta.data[items[0]._index];\n\n\t\t\t\t// don't count items that are skipped (null data)\n\t\t\t\tif (element && !element._view.skip) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * @interface IInteractionOptions\n\t */\n\t/**\n\t * If true, only consider items that intersect the point\n\t * @name IInterfaceOptions#boolean\n\t * @type Boolean\n\t */\n\n\t/**\n\t * @namespace Chart.Interaction\n\t * Contains interaction related functions\n\t */\n\tChart.Interaction = {\n\t\t// Helper function for different modes\n\t\tmodes: {\n\t\t\tsingle: function(chart, e) {\n\t\t\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\t\t\tvar elements = [];\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t\treturn elements;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn elements.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.label\n\t\t\t * @deprecated since version 2.4.0\n\t\t\t */\n\t\t\tlabel: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t\t * @function Chart.Interaction.modes.index\n\t\t\t * @since v2.4.0\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tindex: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t\t * @function Chart.Interaction.modes.dataset\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tdataset: function(chart, e, options) {\n\t\t\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\n\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t\t}\n\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.x-axis\n\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t\t */\n\t\t\t'x-axis': function(chart, e) {\n\t\t\t\treturn indexMode(chart, e, true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Point mode returns all elements that hit test based on the event position\n\t\t\t * of the event\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tpoint: function(chart, e) {\n\t\t\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\t\t\treturn getIntersectItems(chart, position);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * nearest mode returns the element closest to the point\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tnearest: function(chart, e, options) {\n\t\t\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\n\n\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\t\tif (nearestItems.length > 1) {\n\t\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Return only 1 item\n\t\t\t\treturn nearestItems.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t\t * @function Chart.Interaction.modes.x\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tx: function(chart, e, options) {\n\t\t\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t\t * @function Chart.Interaction.modes.y\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\ty: function(chart, e, options) {\n\t\t\t\tvar position = helpers.getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t};\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.controller = new Chart.Controller(item, config, this);\n\t\treturn this.controller;\n\t};\n\n\t// Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\tresponsive: true,\n\t\t\tresponsiveAnimationDuration: 0,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\thover: {\n\t\t\t\tonHover: null,\n\t\t\t\tmode: 'nearest',\n\t\t\t\tintersect: true,\n\t\t\t\tanimationDuration: 400\n\t\t\t},\n\t\t\tonClick: null,\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\tdefaultFontColor: '#666',\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\tdefaultFontSize: 12,\n\t\t\tdefaultFontStyle: 'normal',\n\t\t\tshowLines: true,\n\n\t\t\t// Element defaults defined in element extensions\n\t\t\telements: {},\n\n\t\t\t// Legend callback string\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t\ttext.push('</ul>');\n\n\t\t\t\treturn text.join('');\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n},{}],29:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n\t// It is this service's responsibility of carrying out that layout.\n\tChart.layoutService = {\n\t\tdefaults: {},\n\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\n\t\taddBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\tchartInstance.boxes = [];\n\t\t\t}\n\t\t\tchartInstance.boxes.push(box);\n\t\t},\n\n\t\tremoveBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\n\t\t},\n\n\t\t// The most important function\n\t\tupdate: function(chartInstance, width, height) {\n\n\t\t\tif (!chartInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar layoutOptions = chartInstance.options.layout;\n\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\n\n\t\t\tvar leftPadding = 0;\n\t\t\tvar rightPadding = 0;\n\t\t\tvar topPadding = 0;\n\t\t\tvar bottomPadding = 0;\n\n\t\t\tif (!isNaN(padding)) {\n\t\t\t\t// options.layout.padding is a number. assign to all\n\t\t\t\tleftPadding = padding;\n\t\t\t\trightPadding = padding;\n\t\t\t\ttopPadding = padding;\n\t\t\t\tbottomPadding = padding;\n\t\t\t} else {\n\t\t\t\tleftPadding = padding.left || 0;\n\t\t\t\trightPadding = padding.right || 0;\n\t\t\t\ttopPadding = padding.top || 0;\n\t\t\t\tbottomPadding = padding.bottom || 0;\n\t\t\t}\n\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'left';\n\t\t\t});\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'right';\n\t\t\t});\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'top';\n\t\t\t});\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'bottom';\n\t\t\t});\n\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'chartArea';\n\t\t\t});\n\n\t\t\t// Ensure that full width boxes are at the very top / bottom\n\t\t\ttopBoxes.sort(function(a, b) {\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\n\t\t\t});\n\t\t\tbottomBoxes.sort(function(a, b) {\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\n\t\t\t});\n\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t\t// Our canvas looks like the following.\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t\t// B1 is the bottom axis\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t\t// an error will be thrown.\n\t\t\t//\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  T1 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |    |    |                 T2                  |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    | C1 |                           | C2 |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    | C3 |                           | C4 |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    |                 B1                  |    |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  B2 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t//\n\t\t\t// What we do to find the best sizing, we do the following\n\t\t\t// 1. Determine the minimum size of the chart area.\n\t\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t\t// 6. Refit each axis\n\t\t\t// 7. Position each axis in the final location\n\t\t\t// 8. Tell the chart the final location of the chart area\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t\t// Step 1\n\t\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t\t// Step 2\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t\t// Step 3\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t\t// Step 4\n\t\t\tvar maxChartAreaWidth = chartWidth;\n\t\t\tvar maxChartAreaHeight = chartHeight;\n\t\t\tvar minBoxSizes = [];\n\n\t\t\tfunction getMinimumBoxSize(box) {\n\t\t\t\tvar minSize;\n\t\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t\t} else {\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t\t}\n\n\t\t\t\tminBoxSizes.push({\n\t\t\t\t\thorizontal: isHorizontal,\n\t\t\t\t\tminSize: minSize,\n\t\t\t\t\tbox: box\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t\t// be if the axes are drawn at their minimum sizes.\n\n\t\t\t// Steps 5 & 6\n\t\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\t\tvar totalRightBoxesWidth = rightPadding;\n\t\t\tvar totalTopBoxesHeight = topPadding;\n\t\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t\t// Function to fit a box\n\t\t\tfunction fitBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\t\treturn minBox.box === box;\n\t\t\t\t});\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\t\t\t\tright: totalRightBoxesWidth,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\t// Set the Left and Right margins for the horizontal boxes\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\tfunction finalFitVerticalBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\t\treturn minSize.box === box;\n\t\t\t\t});\n\n\t\t\t\tvar scaleMargin = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t\t};\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Let the left layout know the final margin\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\t\ttotalLeftBoxesWidth = leftPadding;\n\t\t\ttotalRightBoxesWidth = rightPadding;\n\t\t\ttotalTopBoxesHeight = topPadding;\n\t\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t\t// without calling `fit` again\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t\t}\n\n\t\t\t// Step 7 - Position the boxes\n\t\t\tvar left = leftPadding;\n\t\t\tvar top = topPadding;\n\n\t\t\tfunction placeBox(box) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tbox.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\t\tbox.top = top;\n\t\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\ttop = box.bottom;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.left = left;\n\t\t\t\t\tbox.right = left + box.width;\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\tleft = box.right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t\t// Account for chart width and height\n\t\t\tleft += maxChartAreaWidth;\n\t\t\ttop += maxChartAreaHeight;\n\n\t\t\thelpers.each(rightBoxes, placeBox);\n\t\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t\t// Step 8\n\t\t\tchartInstance.chartArea = {\n\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t\t};\n\n\t\t\t// Step 9\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\t\tbox.left = chartInstance.chartArea.left;\n\t\t\t\tbox.top = chartInstance.chartArea.top;\n\t\t\t\tbox.right = chartInstance.chartArea.right;\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\n\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t\t});\n\t\t}\n\t};\n};\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\n\tChart.defaults.global.legend = {\n\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\treverse: false,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Helper function to get the box width based on the usePointStyle option\n\t * @param labelopts {Object} the label options on the legend\n\t * @param fontSize {Number} the label font size\n\t * @return {Number} width of the color box area\n\t */\n\tfunction getBoxWidth(labelOpts, fontSize) {\n\t\treturn labelOpts.usePointStyle ?\n\t\t\tfontSize * Math.SQRT2 :\n\t\t\tlabelOpts.boxWidth;\n\t}\n\n\tChart.Legend = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\thelpers.extend(this, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tthis.legendHitBoxes = [];\n\n\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\tthis.doughnutMode = false;\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all legend types.\n\t\t// Any function can be extended by the legend type\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.legendItems = me.options.labels.generateLabels.call(me, me.chart);\n\t\t\tif (me.options.reverse) {\n\t\t\t\tme.legendItems.reverse();\n\t\t\t}\n\t\t},\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar display = opts.display;\n\n\t\t\tvar ctx = me.ctx;\n\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t// Reset hit boxes\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\t\tvar minSize = me.minSize;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Increase sizes here\n\t\t\tif (display) {\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// Labels\n\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t});\n\n\t\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t\t} else {\n\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\n\t\t// Actually draw the legend on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\tlegendWidth = me.width,\n\t\t\t\tlineWidths = me.lineWidths;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\tcursor,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t\t// Canvas setup\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\n\t\t\t\t\thitboxes = me.legendHitBoxes;\n\n\t\t\t\t// current position\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\tctx.save();\n\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t};\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\n\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Horizontal\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\ty = cursor.y;\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\ty = cursor.y = me.top;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t\t// Fill the actual label\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param e {Event} the event to handle\n\t\t * @return {Boolean} true if a change occured\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\t\tvar changed = false;\n\n\t\t\tif (type === 'mousemove') {\n\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (type === 'click') {\n\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar position = helpers.getRelativePosition(e, me.chart.chart),\n\t\t\t\tx = position.x,\n\t\t\t\ty = position.y;\n\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t\topts.onClick.call(me, e, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\topts.onHover.call(me, e, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t// Register the legend plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar opts = chartInstance.options;\n\t\t\tvar legendOpts = opts.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tchartInstance.legend = new Chart.Legend({\n\t\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\t\toptions: legendOpts,\n\t\t\t\t\tchart: chartInstance\n\t\t\t\t});\n\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.legend);\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar noop = Chart.helpers.noop;\n\n\t/**\n\t * The plugin service singleton\n\t * @namespace Chart.plugins\n\t * @since 2.1.0\n\t */\n\tChart.plugins = {\n\t\t_plugins: [],\n\n\t\t/**\n\t\t * Registers the given plugin(s) if not already registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\t\tp.push(plugin);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Unregisters the given plugin(s) only if registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tunregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tvar idx = p.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tp.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Remove all registered plugins.\n\t\t * @since 2.1.5\n\t\t */\n\t\tclear: function() {\n\t\t\tthis._plugins = [];\n\t\t},\n\n\t\t/**\n\t\t * Returns the number of registered plugins?\n\t\t * @returns {Number}\n\t\t * @since 2.1.5\n\t\t */\n\t\tcount: function() {\n\t\t\treturn this._plugins.length;\n\t\t},\n\n\t\t/**\n\t\t * Returns all registered plugin instances.\n\t\t * @returns {Array} array of plugin objects.\n\t\t * @since 2.1.5\n\t\t */\n\t\tgetAll: function() {\n\t\t\treturn this._plugins;\n\t\t},\n\n\t\t/**\n\t\t * Calls registered plugins on the specified extension, with the given args. This\n\t\t * method immediately returns as soon as a plugin explicitly returns false. The\n\t\t * returned value can be used, for instance, to interrupt the current action.\n\t\t * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').\n\t\t * @param {Array} [args] extra arguments to apply to the extension call.\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t\t */\n\t\tnotify: function(extension, args) {\n\t\t\tvar plugins = this._plugins;\n\t\t\tvar ilen = plugins.length;\n\t\t\tvar i, plugin;\n\n\t\t\tfor (i=0; i<ilen; ++i) {\n\t\t\t\tplugin = plugins[i];\n\t\t\t\tif (typeof plugin[extension] === 'function') {\n\t\t\t\t\tif (plugin[extension].apply(plugin, args || []) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t/**\n\t * Plugin extension methods.\n\t * @interface Chart.PluginBase\n\t * @since 2.1.0\n\t */\n\tChart.PluginBase = Chart.Element.extend({\n\t\t// Called at start of chart init\n\t\tbeforeInit: noop,\n\n\t\t// Called at end of chart init\n\t\tafterInit: noop,\n\n\t\t// Called at start of update\n\t\tbeforeUpdate: noop,\n\n\t\t// Called at end of update\n\t\tafterUpdate: noop,\n\n\t\t// Called at start of draw\n\t\tbeforeDraw: noop,\n\n\t\t// Called at end of draw\n\t\tafterDraw: noop,\n\n\t\t// Called during destroy\n\t\tdestroy: noop\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.plugins instead\n\t * @namespace Chart.pluginService\n\t * @deprecated since version 2.1.5\n\t * @todo remove me at version 3\n\t */\n\tChart.pluginService = Chart.plugins;\n};\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.scale = {\n\t\tdisplay: true,\n\t\tposition: 'left',\n\n\t\t// grid line settings\n\t\tgridLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1,\n\t\t\tdrawBorder: true,\n\t\t\tdrawOnChartArea: true,\n\t\t\tdrawTicks: true,\n\t\t\ttickMarkLength: 10,\n\t\t\tzeroLineWidth: 1,\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\toffsetGridLines: false,\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0\n\t\t},\n\n\t\t// scale label\n\t\tscaleLabel: {\n\t\t\t// actual label\n\t\t\tlabelString: '',\n\n\t\t\t// display property\n\t\t\tdisplay: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tbeginAtZero: false,\n\t\t\tminRotation: 0,\n\t\t\tmaxRotation: 50,\n\t\t\tmirror: false,\n\t\t\tpadding: 10,\n\t\t\treverse: false,\n\t\t\tdisplay: true,\n\t\t\tautoSkip: true,\n\t\t\tautoSkipPadding: 0,\n\t\t\tlabelOffset: 0,\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\tcallback: Chart.Ticks.formatters.values\n\t\t}\n\t};\n\n\tChart.Scale = Chart.Element.extend({\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks\n\t\t\tme.beforeBuildTicks();\n\t\t\tme.buildTicks();\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\t\t\tme.convertTicksToLabels();\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = me.options.ticks;\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tcontext.font = tickLabelFont;\n\n\t\t\tvar firstWidth = context.measureText(me.ticks[0]).width;\n\t\t\tvar lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;\n\t\t\tvar firstRotated;\n\n\t\t\tme.labelRotation = optionTicks.minRotation || 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingLeft = 0;\n\n\t\t\tif (me.options.display) {\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tme.paddingRight = lastWidth / 2 + 3;\n\t\t\t\t\tme.paddingLeft = firstWidth / 2 + 3;\n\n\t\t\t\t\tif (!me.longestTextCache) {\n\t\t\t\t\t\tme.longestTextCache = {};\n\t\t\t\t\t}\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\t\tvar cosRotation;\n\t\t\t\t\tvar sinRotation;\n\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\n\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\t\twhile (labelWidth > tickWidth && me.labelRotation < optionTicks.maxRotation) {\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(me.labelRotation));\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(me.labelRotation));\n\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\n\t\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > me.yLabelWidth) {\n\t\t\t\t\t\t\tme.paddingLeft = firstRotated + tickFontSize / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tme.paddingRight = tickFontSize / 2;\n\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\t\tme.labelRotation--;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tme.labelRotation++;\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t}\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar opts = me.options;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\n\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\t\tif (!me.longestTextCache) {\n\t\t\t\t\tme.longestTextCache = {};\n\t\t\t\t}\n\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\tvar lineSpace = tickFontSize * 0.5;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\t\t\tvar firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;\n\t\t\t\t\tvar lastLabelWidth = me.ctx.measureText(me.ticks[me.ticks.length - 1]).width;\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t// by the font height\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.labelRotation));\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.labelRotation));\n\t\t\t\t\tme.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\tvar maxLabelWidth = me.maxWidth - minSize.width;\n\n\t\t\t\t\t// Account for padding\n\t\t\t\t\tvar mirror = tickOpts.mirror;\n\t\t\t\t\tif (!mirror) {\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\n\t\t\t\t\t\t// We don't need all the room\n\t\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Expand to max size\n\t\t\t\t\t\tminSize.width = me.maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tme.paddingTop = tickFontSize / 2;\n\t\t\t\t\tme.paddingBottom = tickFontSize / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: function() {\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\treturn rawValue;\n\t\t\t\t}\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t// function getLabelForIndex(index, datasetIndex)\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t// Used for tick location, should\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (includeOffset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t},\n\n\t\t// Utility for getting the pixel location of a percentage of scale\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\tgetBasePixel: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPixelForValue(\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = options.ticks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar skipRatio;\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tvar tl = gridLines.tickMarkLength;\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\n\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\n\t\t\t// Make sure we draw text in the correct color and font\n\t\t\tcontext.fillStyle = tickFontColor;\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t// See #2584\n\t\t\t\tif (isRotated) {\n\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t}\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\tskipRatio = false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\n\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (!isRotated) {\n\t\t\t\t\t\ttextBaseline = options.position === 'top' ? 'bottom' : 'top';\n\t\t\t\t\t}\n\n\t\t\t\t\ttextAlign = isRotated ? 'right' : 'center';\n\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\t\t\t\t\tlabelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tif (options.position === 'left') {\n\t\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\t\tlabelX = me.right + optionTicks.padding;\n\t\t\t\t\t\t\ttextAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabelX = me.right - optionTicks.padding;\n\t\t\t\t\t\t\ttextAlign = 'right';\n\t\t\t\t\t\t}\n\t\t\t\t\t// right side\n\t\t\t\t\t} else if (optionTicks.mirror) {\n\t\t\t\t\t\tlabelX = me.left - optionTicks.padding;\n\t\t\t\t\t\ttextAlign = 'right';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlabelX = me.left + optionTicks.padding;\n\t\t\t\t\t\ttextAlign = 'left';\n\t\t\t\t\t}\n\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = tickLabelFont;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tfor (var i = 0, y = -(label.length - 1)*tickFontSize*0.75; i < label.length; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += (tickFontSize * 1.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left,\n\t\t\t\t\tx2 = me.right,\n\t\t\t\t\ty1 = me.top,\n\t\t\t\t\ty2 = me.bottom;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar defaults = this.defaults;\n\t\t\tif (defaults.hasOwnProperty(type)) {\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chartInstance) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Namespace to hold static tick generation functions\n\t * @namespace Chart.Ticks\n\t */\n\tChart.Ticks = {\n\t\t/**\n\t\t * Namespace to hold generators for different types of ticks\n\t\t * @namespace Chart.Ticks.generators\n\t\t */\n\t\tgenerators: {\n\t\t\t/**\n\t\t\t * Interface for the options provided to the numeric tick generator\n\t\t\t * @interface INumericTickGenerationOptions\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum number of ticks to display\n\t\t\t * @name INumericTickGenerationOptions#maxTicks\n\t\t\t * @type Number\n\t\t\t */\n\t\t\t/**\n\t\t\t * The distance between each tick.\n\t\t\t * @name INumericTickGenerationOptions#stepSize\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\n\t\t\t * @name INumericTickGenerationOptions#min\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\n\t\t\t * @name INumericTickGenerationOptions#max\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * Generate a set of linear ticks\n\t\t\t * @method Chart.Ticks.generators.linear\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlinear: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t\t\t\t// for details.\n\n\t\t\t\tvar spacing;\n\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\t\t\t\tspacing = generationOptions.stepSize;\n\t\t\t\t} else {\n\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t\t\t\t}\n\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t\t\t\tvar minMaxDeltaDivisibleByStepSize = ((generationOptions.max - generationOptions.min) % generationOptions.stepSize) === 0;\n\t\t\t\t\tif (minMaxDeltaDivisibleByStepSize) {\n\t\t\t\t\t\tniceMin = generationOptions.min;\n\t\t\t\t\t\tniceMax = generationOptions.max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t\t\t\t// If very close to our rounded value, use it.\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\n\t\t\t\t} else {\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\n\t\t\t\t}\n\n\t\t\t\t// Put the values into the ticks array\n\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\n\t\t\t\t}\n\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\t\t\t\treturn ticks;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Generate a set of logarithmic ticks\n\t\t\t * @method Chart.Ticks.generators.logarithmic\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlogarithmic: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t\t// the graph\n\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\t\t\t\twhile (tickVal < dataRange.max) {\n\t\t\t\t\tticks.push(tickVal);\n\n\t\t\t\t\tvar exp;\n\t\t\t\t\tvar significand;\n\n\t\t\t\t\tif (tickVal === 0) {\n\t\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\t\t\t\t\tsignificand = Math.round(dataRange.minNotZero / Math.pow(10, exp));\n\t\t\t\t\t} else {\n\t\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\n\t\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (significand === 10) {\n\t\t\t\t\t\tsignificand = 1;\n\t\t\t\t\t\t++exp;\n\t\t\t\t\t}\n\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t}\n\n\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\n\t\t\t\tticks.push(lastTick);\n\n\t\t\t\treturn ticks;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Namespace to hold formatters for different types of ticks\n\t\t * @namespace Chart.Ticks.formatters\n\t\t */\n\t\tformatters: {\n\t\t\t/**\n\t\t\t * Formatter for value labels\n\t\t\t * @method Chart.Ticks.formatters.values\n\t\t\t * @param value the value to display\n\t\t\t * @return {String|Array} the label to display\n\t\t\t */\n\t\t\tvalues: function(value) {\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Formatter for linear numeric ticks\n\t\t\t * @method Chart.Ticks.formatters.linear\n\t\t\t * @param tickValue {Number} the value to be formatted\n\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t\t * @return {String} string representation of the tickValue parameter\n\t\t\t */\n\t\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t\t// not an integer\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\t\tvar tickString = '';\n\n\t\t\t\tif (tickValue !== 0) {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t} else {\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t\t}\n\n\t\t\t\treturn tickString;\n\t\t\t},\n\n\t\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\t\tif (tickValue === 0) {\n\t\t\t\t\treturn '0';\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\t\treturn tickValue.toExponential();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t};\n};\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.title = {\n\t\tdisplay: false,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\n\t\tfontStyle: 'bold',\n\t\tpadding: 10,\n\n\t\t// actual title\n\t\ttext: ''\n\t};\n\n\tvar noop = helpers.noop;\n\tChart.Title = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\tvar me = this;\n\t\t\thelpers.extend(me, config);\n\t\t\tme.options = helpers.configMerge(Chart.defaults.global.title, config.options);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tme.legendHitBoxes = [];\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\t\tbeforeUpdate: function() {\n\t\t\tvar chartOpts = this.chart.options;\n\t\t\tif (chartOpts && chartOpts.title) {\n\t\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, chartOpts.title);\n\t\t\t}\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: noop,\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\tdisplay = opts.display,\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\tminSize = me.minSize;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\tvar pos = this.options.position;\n\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t},\n\n\t\t// Actually draw the title block on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this,\n\t\t\t\tctx = me.ctx,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\trotation = 0,\n\t\t\t\t\ttitleX,\n\t\t\t\t\ttitleY,\n\t\t\t\t\ttop = me.top,\n\t\t\t\t\tleft = me.left,\n\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\tright = me.right,\n\t\t\t\t\tmaxWidth;\n\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\tctx.font = titleFont;\n\n\t\t\t\t// Horizontal\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t\tmaxWidth = right - left;\n\t\t\t\t} else {\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\tctx.rotate(rotation);\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\n\t// Register the title plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar opts = chartInstance.options;\n\t\t\tvar titleOpts = opts.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\tchartInstance.titleBlock = new Chart.Title({\n\t\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\t\toptions: titleOpts,\n\t\t\t\t\tchart: chartInstance\n\t\t\t\t});\n\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.titleBlock);\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\tChart.defaults.global.tooltips = {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t};\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index,\n\t\t\tdatasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize,\n\t\t\tbodyFontSize = model.bodyFontSize,\n\t\t\tfooterFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chartInstance.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize,\n\t\t\tcaretPadding = vm.caretPadding,\n\t\t\tcornerRadius = vm.cornerRadius,\n\t\t\txAlign = alignment.xAlign,\n\t\t\tyAlign = alignment.yAlign,\n\t\t\tpaddingAndSize = caretSize + caretPadding,\n\t\t\tradiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\t\t\tvar chartInstance = me._chartInstance;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\n\t\t\t\t});\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);\n\t\t\t\tmodel.labelColors = labelColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size, opacity) {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar x1, x2, x3;\n\t\t\tvar y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign,\n\t\t\t\tyAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x,\n\t\t\t\tptY = tooltipPoint.y;\n\t\t\tvar width = size.width,\n\t\t\t\theight = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\t// Left or right side\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t}\n\n\t\t\t\ty2 = ptY + (height / 2);\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX + cornerRadius;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = ptX + (width / 2);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.lineTo(x3, y3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\n\t\t\tctx.fill();\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\tif (this._options.enabled) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Caret\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param e {Event} the event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = helpers.getRelativePosition(e, me._chart);\n\n\t\t\t\tvar model = me._model;\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\n\t\t\t\t// See if our tooltip position changed\n\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\n\t\t\tvar nearestElement;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n},{}],37:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.arc = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderColor: '#fff',\n\t\tborderWidth: 2\n\t};\n\n\tChart.elements.Arc = Chart.Element.extend({\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinRange: function(chartX, chartY) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\ty: chartY\n\t\t\t\t\t}),\n\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\tdistance = pointRelativePosition.distance;\n\n\t\t\t\t// Sanitise angle range\n\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\t\treturn {\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\treturn {\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\n\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\tvm = this._view,\n\t\t\t\tsA = vm.startAngle,\n\t\t\t\teA = vm.endAngle;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],38:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tChart.defaults.global.elements.line = {\n\t\ttension: 0.4,\n\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\tborderWidth: 3,\n\t\tborderColor: globalDefaults.defaultColor,\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tcapBezierPoints: true,\n\t\tfill: true, // do we fill in the area between the line and its base axis\n\t};\n\n\tChart.elements.Line = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar vm = me._view;\n\t\t\tvar spanGaps = vm.spanGaps;\n\t\t\tvar fillPoint = vm.scaleZero;\n\t\t\tvar loop = me._loop;\n\n\t\t\t// Handle different fill modes for cartesian lines\n\t\t\tif (!loop) {\n\t\t\t\tif (vm.fill === 'top') {\n\t\t\t\t\tfillPoint = vm.scaleTop;\n\t\t\t\t} else if (vm.fill === 'bottom') {\n\t\t\t\t\tfillPoint = vm.scaleBottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = me._chart.ctx;\n\t\t\tctx.save();\n\n\t\t\t// Helper function to draw a line to a point\n\t\t\tfunction lineToPoint(previousPoint, point) {\n\t\t\t\tvar pointVM = point._view;\n\t\t\t\tif (point._view.steppedLine === true) {\n\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else if (point._view.tension === 0) {\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\n\t\t\t\t\t\tpointVM.controlPointPreviousX,\n\t\t\t\t\t\tpointVM.controlPointPreviousY,\n\t\t\t\t\t\tpointVM.x,\n\t\t\t\t\t\tpointVM.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar points = me._children.slice(); // clone array\n\t\t\tvar lastDrawnIndex = -1;\n\n\t\t\t// If we are looping, adding the first point again\n\t\t\tif (loop && points.length) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\tvar index, current, previous, currentVM;\n\n\t\t\t// Fill Line\n\t\t\tif (points.length && vm.fill) {\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\tctx.moveTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\t\tif (currentVM.skip) {\n\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\n\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\n\t\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, fillPoint);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\n\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\n\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\n\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t} else if (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\n\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);\n\t\t\t\t}\n\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\n\t\t\t// Stroke Line Options\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t\t// IE 9 and 10 do not support line dash\n\t\t\tif (ctx.setLineDash) {\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t\t}\n\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t\t// Stroke Line\n\t\t\tctx.beginPath();\n\t\t\tlastDrawnIndex = -1;\n\n\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\tcurrent = points[index];\n\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.stroke();\n\t\t\tctx.restore();\n\t\t}\n\t});\n};\n\n},{}],39:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global,\n\t\tdefaultColor = globalOpts.defaultColor;\n\n\tglobalOpts.elements.point = {\n\t\tradius: 3,\n\t\tpointStyle: 'circle',\n\t\tbackgroundColor: defaultColor,\n\t\tborderWidth: 1,\n\t\tborderColor: defaultColor,\n\t\t// Hover\n\t\thitRadius: 1,\n\t\thoverRadius: 4,\n\t\thoverBorderWidth: 1\n\t};\n\n\tfunction xRange(mouseX) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tfunction yRange(mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tChart.elements.Point = Chart.Element.extend({\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t\t},\n\n\t\tinLabelRange: xRange,\n\t\tinXRange: xRange,\n\t\tinYRange: yRange,\n\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y,\n\t\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar pointStyle = vm.pointStyle;\n\t\t\tvar radius = vm.radius;\n\t\t\tvar x = vm.x;\n\t\t\tvar y = vm.y;\n\n\t\t\tif (vm.skip) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\n\t\t}\n\t});\n};\n\n},{}],40:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar globalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.rectangle = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderWidth: 0,\n\t\tborderColor: globalOpts.defaultColor,\n\t\tborderSkipped: 'bottom'\n\t};\n\n\tfunction isVertical(bar) {\n\t\treturn bar._view.width !== undefined;\n\t}\n\n\t/**\n\t * Helper function to get the bounds of the bar regardless of the orientation\n\t * @private\n\t * @param bar {Chart.Element.Rectangle} the bar\n\t * @return {Bounds} bounds of the bar\n\t */\n\tfunction getBarBounds(bar) {\n\t\tvar vm = bar._view;\n\t\tvar x1, x2, y1, y2;\n\n\t\tif (isVertical(bar)) {\n\t\t\t// vertical\n\t\t\tvar halfWidth = vm.width / 2;\n\t\t\tx1 = vm.x - halfWidth;\n\t\t\tx2 = vm.x + halfWidth;\n\t\t\ty1 = Math.min(vm.y, vm.base);\n\t\t\ty2 = Math.max(vm.y, vm.base);\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tvar halfHeight = vm.height / 2;\n\t\t\tx1 = Math.min(vm.x, vm.base);\n\t\t\tx2 = Math.max(vm.x, vm.base);\n\t\t\ty1 = vm.y - halfHeight;\n\t\t\ty2 = vm.y + halfHeight;\n\t\t}\n\n\t\treturn {\n\t\t\tleft: x1,\n\t\t\ttop: y1,\n\t\t\tright: x2,\n\t\t\tbottom: y2\n\t\t};\n\t}\n\n\tChart.elements.Rectangle = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tvar halfWidth = vm.width / 2,\n\t\t\t\tleftX = vm.x - halfWidth,\n\t\t\t\trightX = vm.x + halfWidth,\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\n\t\t\t\thalfStroke = vm.borderWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t// | 1 2 |\n\t\t\t// | 0 3 |\n\t\t\tvar corners = [\n\t\t\t\t[leftX, vm.base],\n\t\t\t\t[leftX, top],\n\t\t\t\t[rightX, top],\n\t\t\t\t[rightX, vm.base]\n\t\t\t];\n\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\n\t\t\tif (startCorner === -1) {\n\t\t\t\tstartCorner = 0;\n\t\t\t}\n\n\t\t\tfunction cornerAt(index) {\n\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t}\n\n\t\t\t// Draw rectangle from 'startCorner'\n\t\t\tvar corner = cornerAt(0);\n\t\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\tcorner = cornerAt(i);\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t\t}\n\n\t\t\tctx.fill();\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.base - vm.y;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar inRange = false;\n\n\t\t\tif (this._view) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinLabelRange: function(mouseX, mouseY) {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar inRange = false;\n\t\t\tvar bounds = getBarBounds(me);\n\n\t\t\tif (isVertical(me)) {\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t} else {\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinXRange: function(mouseX) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t},\n\t\tinYRange: function(mouseY) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar x, y;\n\t\t\tif (isVertical(this)) {\n\t\t\t\tx = vm.x;\n\t\t\t\ty = (vm.y + vm.base) / 2;\n\t\t\t} else {\n\t\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\t\ty = vm.y;\n\t\t\t}\n\n\t\t\treturn {x: x, y: y};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t}\n\t});\n\n};\n\n},{}],41:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\t\t// Implement this so that\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif ((data.xLabels && isHorizontal) || (data.yLabels && !isHorizontal)) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\n\t\t\tvar me = this;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\n\t\t\tif (value !== undefined && isNaN(index)) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex)) + me.paddingLeft;\n\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\tvar valueHeight = innerHeight / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex)) + me.paddingTop;\n\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar innerDimension = horz ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\n\t\t\tvar valueDimension = innerDimension / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (me.options.gridLines.offsetGridLines) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\t\t\tpixel -= horz ? me.paddingLeft : me.paddingTop;\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n},{}],42:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tif (opts.stacked) {\n\t\t\t\tvar valuesPerType = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar innerDimension;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\n\t\t\t\tpixel = me.left + (innerDimension / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel + paddingLeft);\n\t\t\t}\n\t\t\tinnerDimension = me.height - (me.paddingTop + paddingBottom);\n\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\n\t\t\treturn Math.round(pixel);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);\n\t\t\tvar offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tnoop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n},{}],44:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tif (opts.stacked) {\n\t\t\t\tvar valuesPerType = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tvalues[index] = 100;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\n\t\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = 1;\n\t\t\t\t\tme.max = 10;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\n\n\t\t\tif (!me.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tticks.reverse();\n\t\t\t}\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension;\n\t\t\tvar pixel;\n\n\t\t\tvar start = me.start;\n\t\t\tvar newVal = +me.getRightValue(value);\n\t\t\tvar range;\n\t\t\tvar paddingTop = me.paddingTop;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\n\t\t\t\tif (newVal === 0) {\n\t\t\t\t\tpixel = me.left + paddingLeft;\n\t\t\t\t} else {\n\t\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t\tpixel += paddingLeft;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Bottom - top since pixels increase downward on a screen\n\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === start) {\n\t\t\t\t\t\tpixel = me.bottom - paddingBottom;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.bottom - paddingBottom - innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.bottom - paddingBottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === me.end) {\n\t\t\t\t\t\tpixel = me.top + paddingTop;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.top + paddingTop + innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.top + paddingTop + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\n\t\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\n\t\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\n\t\t\tvar value, innerDimension;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left - me.paddingLeft) * range / innerDimension);\n\t\t\t} else {  // todo: if start === 0\n\t\t\t\tinnerDimension = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\t\tvalue = Math.pow(10, (me.bottom - me.paddingBottom - pixel) * range / innerDimension) / me.start;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n},{}],45:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tlineArc: false,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tgetValueCount: function() {\n\t\t\treturn this.chart.data.labels.length;\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\t\t\tvar pointLabels = this.options.pointLabels;\n\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft;\n\t\t\tthis.ctx.font = pointLabeFont;\n\n\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\n\n\t\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\t\tvar angleRadians = this.getIndexAngle(i) + (Math.PI / 2);\n\t\t\t\tvar angle = (angleRadians * 360 / (2 * Math.PI)) % 360;\n\n\t\t\t\tif (angle === 0 || angle === 180) {\n\t\t\t\t\t// At angle 0 and 180, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth / 2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t} else if (angle < 180) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t} else if (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tme.yCenter = Math.round((me.height / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier - (Math.PI / 2) + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar angleLineOpts = opts.angleLines;\n\t\t\tvar pointLabelOpts = opts.pointLabels;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || opts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\t\t\t\t\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\t\t\t\t\t\tif (opts.lineArc) {\n\t\t\t\t\t\t\t\t// Draw circular arcs between the points\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(me.xCenter, me.yCenter, yCenterOffset, 0, Math.PI * 2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i = 0; i < me.getValueCount(); i++) {\n\t\t\t\t\t\t\t\t\tvar pointPosition = me.getPointPosition(i, yCenterOffset);\n\t\t\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!opts.lineArc) {\n\t\t\t\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\t\t\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\t\t\t\tvar outerDistance = me.getDistanceFromCenterForValue(opts.reverse ? me.min : me.max);\n\n\t\t\t\t\t// Point Label Font\n\t\t\t\t\tvar pointLabelFontSize = getValueOrDefault(pointLabelOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\t\tvar pointLabeFontStyle = getValueOrDefault(pointLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\t\tvar pointLabeFontFamily = getValueOrDefault(pointLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\n\n\t\t\t\t\tfor (var i = me.getValueCount() - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (angleLineOpts.display) {\n\t\t\t\t\t\t\tvar outerPosition = me.getPointPosition(i, outerDistance);\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = me.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\tctx.font = pointLabeFont;\n\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\t\t\tvar pointLabels = me.pointLabels;\n\n\t\t\t\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\t\t\t\tvar angleRadians = this.getIndexAngle(i) + (Math.PI / 2);\n\t\t\t\t\t\tvar angle = (angleRadians * 360 / (2 * Math.PI)) % 360;\n\n\t\t\t\t\t\tif (angle === 0 || angle === 180) {\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (angle < 180) {\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (angle === 90 || angle === 270) {\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (angle > 270 || angle < 90) {\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(pointLabels[i] ? pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n},{}],46:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nvar moment = require(1);\nmoment = typeof(moment) === 'function' ? moment : window.moment;\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar time = {\n\t\tunits: [{\n\t\t\tname: 'millisecond',\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tsteps: [1, 2, 3, 6, 12]\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tsteps: [1, 2, 5]\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tmaxStep: 3\n\t\t}, {\n\t\t\tname: 'quarter',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tmaxStep: false\n\t\t}]\n\t};\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\n\t\t\t\tday: 'll', // Sep 4 2015\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t}\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\t\tgetLabelMoment: function(datasetIndex, index) {\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetLabelDiff: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (me.labelDiffs === undefined) {\n\t\t\t\tme.buildLabelDiffs();\n\t\t\t}\n\n\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\n\t\t\t\treturn me.labelDiffs[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetMomentStartOf: function(tick) {\n\t\t\tvar me = this;\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\n\t\t\t}\n\t\t\treturn tick.clone().startOf(me.tickUnit);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelMoments = [];\n\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\n\t\t\t// these\n\t\t\tvar scaleLabelMoments = [];\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\n\t\t\t} else {\n\t\t\t\tme.firstTick = null;\n\t\t\t\tme.lastTick = null;\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar momentsForDataset = [];\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\n\n\t\t\t\t\t\t\tif (datasetVisible) {\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use the ones from the scale\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\n\t\t\t\t}\n\n\t\t\t\tme.labelMoments.push(momentsForDataset);\n\t\t\t}, me);\n\n\t\t\t// Set these after we've done all the data\n\t\t\tif (me.options.time.min) {\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\n\t\t\t}\n\n\t\t\tif (me.options.time.max) {\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\n\t\t\t}\n\n\t\t\t// We will modify these, so clone for later\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\n\t\t},\n\t\tbuildLabelDiffs: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelDiffs = [];\n\t\t\tvar scaleLabelDiffs = [];\n\t\t\t// Parse common labels once\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\n\t\t\t\tvar diffsForDataset = [];\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use common ones\n\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\n\t\t\t\t}\n\n\t\t\t\tme.labelDiffs.push(diffsForDataset);\n\t\t\t}, me);\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\n\t\t\tme.ctx.save();\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\tme.ticks = [];\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\n\n\t\t\t// Set unit override if applicable\n\t\t\tif (me.options.time.unit) {\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\n\t\t\t} else {\n\t\t\t\t// Determine the smallest needed unit of the time\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\n\n\t\t\t\t// Crude approximation of what the label length might be\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\n\n\t\t\t\t// Start as small as possible\n\t\t\t\tme.tickUnit = me.options.time.minUnit;\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\n\t\t\t\tvar unitDefinitionIndex = 0;\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t// While we aren't ideal and we don't have units left\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\n\t\t\t\t\tme.unitScale = 1;\n\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\n\t\t\t\t\t\t// Use one of the predefined steps\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\n\t\t\t\t\t\t// We have a max step. Scale this unit\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Move to the next unit up\n\t\t\t\t\t\t++unitDefinitionIndex;\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar roundedStart;\n\n\t\t\t// Only round the first tick if we have no hard minimum\n\t\t\tif (!me.options.time.min) {\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\n\t\t\t\troundedStart = me.firstTick;\n\t\t\t} else {\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\n\t\t\t}\n\n\t\t\t// Only round the last tick if we have no hard maximum\n\t\t\tif (!me.options.time.max) {\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\n\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\n\t\t\t\t} else if (delta >= 0) {\n\t\t\t\t\tme.lastTick = roundedEnd;\n\t\t\t\t}\n\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t}\n\n\t\t\t// Tick displayFormat override\n\t\t\tif (me.options.time.displayFormat) {\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\n\t\t\t}\n\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\n\t\t\tme.ticks.push(me.firstTick.clone());\n\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\n\t\t\tfor (var i = 1; i <= me.scaleSizeInUnits; ++i) {\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\n\n\t\t\t\t// Are we greater than the max time\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (i % me.unitScale === 0) {\n\t\t\t\t\tme.ticks.push(newTick);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Always show the right tick\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\n\t\t\t\t// but the last tick was not rounded.\n\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\n\t\t\t\t} else {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.ctx.restore();\n\n\t\t\t// Invalidate label diffs cache\n\t\t\tme.labelDiffs = undefined;\n\t\t},\n\t\t// Get tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\n\n\t\t\tif (typeof me.chart.data.datasets[datasetIndex].data[0] === 'object') {\n\t\t\t\tlabel = me.getRightValue(me.chart.data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\n\t\t\t// Format nicely\n\t\t\tif (me.options.time.tooltipFormat) {\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\n\t\t\t}\n\n\t\t\treturn label;\n\t\t},\n\t\t// Function to format an individual tick mark\n\t\ttickFormatFunction: function(tick, index, ticks) {\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(formattedTick, index, ticks);\n\t\t\t}\n\t\t\treturn formattedTick;\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.tickMoments = me.ticks;\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\n\t\t},\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar offset = null;\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\n\t\t\t}\n\n\t\t\tif (offset === null) {\n\t\t\t\tif (!value || !value.isValid) {\n\t\t\t\t\t// not already a moment object\n\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\n\t\t\t\t}\n\t\t\t\tif (value && value.isValid && value.isValid()) {\n\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (offset !== null) {\n\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\n\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\n\t\t\t\t}\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\t\tvar heightOffset = (innerHeight * decimal) + me.paddingTop;\n\n\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t}\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left + me.paddingLeft : me.top + me.paddingTop)) / innerDimension;\n\t\t\toffset *= me.scaleSizeInUnits;\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\n\t\t},\n\t\tparseTime: function(label) {\n\t\t\tvar me = this;\n\t\t\tif (typeof me.options.time.parser === 'string') {\n\t\t\t\treturn moment(label, me.options.time.parser);\n\t\t\t}\n\t\t\tif (typeof me.options.time.parser === 'function') {\n\t\t\t\treturn me.options.time.parser(label);\n\t\t\t}\n\t\t\t// Date objects\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\n\t\t\t\treturn moment(label);\n\t\t\t}\n\t\t\t// Moment support\n\t\t\tif (label.isValid && label.isValid()) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t\t// Custom parsing (return an instance of moment)\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\n\t\t\t\treturn me.options.time.format(label);\n\t\t\t}\n\t\t\t// Moment format parsing\n\t\t\treturn moment(label, me.options.time.format);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n\n};\n\n},{\"1\":1}]},{},[7])(7)\n});","/**\n * Fizzy UI utils v2.0.3\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  var ary = [];\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( obj && typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    if ( timeout ) {\n      clearTimeout( timeout );\n    }\n    var args = arguments;\n\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold || 100 );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  var x = xValue.indexOf('%') != -1 ?\n    ( parseFloat( xValue ) / 100 ) * layoutSize.width : parseInt( xValue, 10 );\n  var y = yValue.indexOf('%') != -1 ?\n    ( parseFloat( yValue ) / 100 ) * layoutSize.height : parseInt( yValue, 10 );\n\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var compareX = parseInt( x, 10 );\n  var compareY = parseInt( y, 10 );\n  var didNotMove = compareX === this.position.x && compareY === this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseInt( x, 10 );\n  this.position.y = parseInt( y, 10 );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n","/*!\n * Outlayer v2.1.0\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n","/*!\n * Masonry v4.1.1\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  Masonry.prototype._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n  };\n\n  Masonry.prototype.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  Masonry.prototype.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  Masonry.prototype._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n\n    var colGroup = this._getColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n    var shortColIndex = colGroup.indexOf( minimumY );\n\n    // position the brick\n    var position = {\n      x: this.columnWidth * shortColIndex,\n      y: minimumY\n    };\n\n    // apply setHeight to necessary columns\n    var setHeight = minimumY + item.size.outerHeight;\n    var setSpan = this.cols + 1 - colGroup.length;\n    for ( var i = 0; i < setSpan; i++ ) {\n      this.colYs[ shortColIndex + i ] = setHeight;\n    }\n\n    return position;\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  Masonry.prototype._getColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      // make an array of colY values for that one group\n      var groupColYs = this.colYs.slice( i, i + colSpan );\n      // and get the max value of the array\n      colGroup[i] = Math.max.apply( Math, groupColYs );\n    }\n    return colGroup;\n  };\n\n  Masonry.prototype._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  Masonry.prototype._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  Masonry.prototype._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  Masonry.prototype.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n","/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2017, Shoop Commerce Ltd. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nwindow.DashboardCharts = (function(Chart) {\n    // colors from shuup/admin/static_src/base/less/variables.less\n    let colorPallete = [\n        \"#429AAF\",\n        \"#C54141\",\n        \"#D16B2C\",\n        \"#555555\",\n        \"#7F5C99\",\n        \"#409AAF\",\n        \"#94B933\",\n        \"#CFBE00\",\n        \"#41589B\"\n    ];\n    let nextColorIndex = 0;\n\n    function getNextColorFromPallete (){\n        return colorPallete[nextColorIndex++ % colorPallete.length];\n    }\n    function configureChartData(chartData){\n        let color = getNextColorFromPallete();\n        chartData.backgroundColor = color;\n\n        if (chartData.type == \"line\"){\n            chartData.borderColor = color;\n            chartData.fill = false;\n        }\n    }\n    function activate(config, id) {\n        const context = $(\"#chart-\" + id);\n\n        if (!context) {\n            return;\n        }\n\n        let chartData = {};\n        if (config.type == \"mixed\"){\n            _.each(config.data, configureChartData);\n\n            chartData = {\n                type: \"bar\",\n                data: {\n                    labels: config.labels,\n                    datasets: config.data,\n                },\n                options: config.options\n            }\n        }else{\n            _.each(config.data.datasets, configureChartData);\n            chartData = {\n                type: config.type,\n                data: config.data,\n                options: config.options\n            };\n        }\n\n        // change the tooltips label callback\n        chartData.options = chartData.options || {}\n        chartData.options.tooltips = {\n            callbacks: {\n                label: function(tooltipItem, data){\n                    let datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n                    let formattedData = data.datasets[tooltipItem.datasetIndex].formatted_data;\n                    let value = formattedData ? formattedData[tooltipItem.index] : tooltipItem.yLabel.toLocaleString();\n                    return datasetLabel + ': ' + value;\n                }\n            }\n        }\n\n        const chart = new Chart(context, chartData);\n    }\n    return {\n        init: function init() {\n            _.each(window.CHART_CONFIGS || {}, function(config, id) {\n                activate(config, id);\n            });\n        }\n    };\n}(window.Chart));\n","/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2017, Shoop Commerce Ltd. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* eslint-disable no-unused-vars */\n$(function() {\n    \"use strict\";\n    if (window.DashboardCharts) {\n        window.DashboardCharts.init();\n    }\n    if (window.Masonry) {\n        const Masonry = window.Masonry;\n\n        const msnry = new Masonry(document.getElementById(\"dashboard-wrapper\"), {\n            itemSelector: \".block\",\n            columnWidth: \".block\",\n            percentPosition: true\n        });\n    }\n    $(document).on(\"click\", \"button.dismiss-button\", function() {\n        const $button = $(this);\n        const url = $button.data(\"dismissUrl\");\n        if (!url) {\n            return;\n        }\n        $.ajax({\n            type: \"POST\",\n            url: url,\n            dataType: \"json\",\n            success: function(data) {\n                if (data.ok) {\n                    const dismissTarget = $button.data(\"dismissTarget\");\n                    if (dismissTarget) {\n                        $(dismissTarget).remove();\n                    }\n                }\n                if (data.error && window.Messages) {\n                    window.Messages.enqueue({text: data.error});\n                }\n            }\n        });\n    });\n});\n"],"sourceRoot":"/source/"}