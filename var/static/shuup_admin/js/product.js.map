{"version":3,"sources":["product.js","edit_media.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","Array","isArray","Object","TypeError","$","addMediaPanel","$section","file","section","attr","panelCount","$source","$html","html","replace","targetId","indexOf","$contents","url","append","find","name","val","id","insertBefore","onDropzoneQueueComplete","dropzone","kind","location","pathname","productId","data","product_id","$fileInputs","fileIds","fileId","parseInt","isNaN","ajax","method","csrfmiddlewaretoken","ShuupAdminConfig","csrf","file_ids","traditional","success","window","Messages","enqueue","tags","text","message","error","alert","onDropzoneSuccess","xhr","JSON","parse","responseText","on","e","preventDefault","confirm","gettext","this","parents","fadeOut","prop","document","$panel","prefix","_prefix$split","split","_prefix$split2","current","$imagePanels","removeClass","addClass","replaceWith","class","href","each","activateDropzone","maxFiles","onSuccess","onQueueComplete"],"mappings":"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","file":"product.js","sourcesContent":["/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2017, Shoop Commerce Ltd. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\n$(function () {\n    $(\".product-media-delete\").on(\"click\", function (e) {\n        e.preventDefault();\n        if (confirm(gettext(\"Are you sure you want to delete this media?\"))) {\n            $(this).parents(\".panel\").fadeOut();\n            $(this).next(\".hide\").find(\"input\").prop(\"checked\", true);\n        }\n    });\n\n    $(document).on(\"click\", \".set-as-primary\", function (e) {\n        e.preventDefault();\n        var $panel = $(this).parents(\".panel\");\n        var prefix = $panel.data(\"prefix\");\n\n        var _prefix$split = prefix.split(\"-\");\n\n        var _prefix$split2 = _slicedToArray(_prefix$split, 2);\n\n        var current = _prefix$split2[1];\n\n        var $imagePanels = $(\"#product-images-section .panel\");\n\n        $imagePanels.removeClass(\"panel-selected\").addClass(\"panel-default\");\n\n        $(\".is-primary-image\").replaceWith(function () {\n            return $(\"<a>\", { \"class\": \"set-as-primary\", \"href\": \"#\" }).text(gettext(\"Set as primary image\"));\n        });\n\n        $imagePanels.each(function (i) {\n            $(\"#id_images-\" + i + \"-is_primary\").prop(\"checked\", false);\n        });\n\n        $(this).replaceWith(function () {\n            return $(\"<span>\", { \"class\": \"is-primary-image\" }).text(gettext(\"Primary image\"));\n        });\n\n        $panel.addClass(\"panel-selected\");\n        $(\"#id_images-\" + current + \"-is_primary\").prop(\"checked\", true);\n    });\n\n    function addMediaPanel($section, file) {\n        var section = $section.attr(\"id\");\n        var panelCount = $(\"#\" + section + \" .panel\").length;\n        var $source = $(\"#\" + section + \"-placeholder-panel\");\n        var $html = $($source.html().replace(/__prefix__/g, panelCount - 1).replace(/__prefix_name__/g, panelCount));\n        var targetId = \"id_images\";\n        if (section.indexOf(\"media\") > 0) {\n            targetId = \"id_media\";\n        }\n        if (file) {\n            var $contents = $(\"<a href='\" + file.url + \"' target='_blank'></a>\");\n            if (targetId === \"id_images\") {\n                $contents.append(\"<img src='\" + file.url + \"'>\");\n                $html.find(\".thumbnail\").append($contents);\n            } else {\n                $contents.append(\"<br><p>\" + file.name + \"</p>\");\n                $html.find(\".thumbnail\").append($contents);\n            }\n            $html.find(\".file-control\").find(\"input\").val(file.id);\n        }\n        $html.insertBefore($source);\n    }\n\n    function onDropzoneQueueComplete(dropzone, kind) {\n        if (location.pathname.indexOf(\"new\") > 0) {\n            // save product media the traditional way via the save button when creating a new product\n            return;\n        }\n        var productId = $(\"#product-\" + kind + \"-section-dropzone\").data().product_id;\n        var $fileInputs = $(\"#product-\" + kind + \"-section\").find(\".file-control input\");\n        var fileIds = [];\n\n        for (var i = 0; i < $fileInputs.length; i++) {\n            var fileId = parseInt($($fileInputs[i]).val());\n            if (!isNaN(fileId)) {\n                fileIds.push(parseInt($($fileInputs[i]).val()));\n            }\n        }\n        $.ajax({\n            url: \"/sa/products/\" + productId + \"/media/add/\",\n            method: \"POST\",\n            data: {\n                csrfmiddlewaretoken: ShuupAdminConfig.csrf,\n                product_id: productId,\n                file_ids: fileIds,\n                kind: kind\n            },\n            traditional: true,\n            success: function success(data) {\n                window.Messages.enqueue({ tags: \"success\", text: data.message });\n            },\n            error: function error(data) {\n                alert(\"ERROR\");\n            }\n        });\n    }\n\n    function onDropzoneSuccess($section, file) {\n        // file selected through dnd\n        if (file.xhr) {\n            file = JSON.parse(file.xhr.responseText).file;\n        }\n        addMediaPanel($section, file);\n    }\n\n    activateDropzone($(\"#product-images-section-dropzone\"), {\n        url: \"/sa/media/?action=upload&path=/products/images\",\n        maxFiles: 10,\n        onSuccess: function onSuccess(file) {\n            onDropzoneSuccess($(\"#product-images-section\"), file);\n        },\n        onQueueComplete: function onQueueComplete() {\n            onDropzoneQueueComplete(this, \"images\");\n        }\n    });\n\n    activateDropzone($(\"#product-media-section-dropzone\"), {\n        url: \"/sa/media/?action=upload&path=/products/media\",\n        maxFiles: 10,\n        onSuccess: function onSuccess(file) {\n            onDropzoneSuccess($(\"#product-media-section\"), file);\n        },\n        onQueueComplete: function onQueueComplete() {\n            onDropzoneQueueComplete(this, \"media\");\n        }\n    });\n});","/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2017, Shoop Commerce Ltd. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n$(function() {\n    $(\".product-media-delete\").on(\"click\", function(e) {\n        e.preventDefault();\n        if (confirm(gettext(\"Are you sure you want to delete this media?\")))\n        {\n            $(this).parents(\".panel\").fadeOut();\n            $(this).next(\".hide\").find(\"input\").prop(\"checked\", true);\n        }\n    });\n\n    $(document).on(\"click\", \".set-as-primary\", function(e) {\n        e.preventDefault();\n        const $panel = $(this).parents(\".panel\");\n        const prefix = $panel.data(\"prefix\");\n\n        const [, current] = prefix.split(\"-\");\n\n        const $imagePanels = $(\"#product-images-section .panel\");\n\n        $imagePanels.removeClass(\"panel-selected\").addClass(\"panel-default\");\n\n        $(\".is-primary-image\").replaceWith(function() {\n            return $(\"<a>\", {\"class\": \"set-as-primary\", \"href\": \"#\"}).text(gettext(\"Set as primary image\"));\n        });\n\n        $imagePanels.each(function(i) {\n            $(\"#id_images-\" + i + \"-is_primary\").prop(\"checked\", false);\n        });\n\n        $(this).replaceWith(function() {\n            return $(\"<span>\", {\"class\": \"is-primary-image\"}).text(gettext(\"Primary image\"));\n        });\n\n        $panel.addClass(\"panel-selected\");\n        $(\"#id_images-\" + current + \"-is_primary\").prop(\"checked\", true);\n    });\n\n    function addMediaPanel($section, file) {\n        const section = $section.attr(\"id\");\n        const panelCount = $(\"#\" + section + \" .panel\").length;\n        const $source = $(\"#\" + section + \"-placeholder-panel\");\n        const $html = $($source.html().replace(/__prefix__/g, panelCount - 1).replace(/__prefix_name__/g, panelCount));\n        let targetId = \"id_images\";\n        if(section.indexOf(\"media\") > 0) {\n            targetId = \"id_media\";\n        }\n        if(file) {\n            let $contents = $(\"<a href='\" + file.url + \"' target='_blank'></a>\");\n            if(targetId === \"id_images\") {\n                $contents.append(\"<img src='\" + file.url + \"'>\");\n                $html.find(\".thumbnail\").append($contents);\n            } else {\n                $contents.append(\"<br><p>\" + file.name + \"</p>\");\n                $html.find(\".thumbnail\").append($contents);\n            }\n            $html.find(\".file-control\").find(\"input\").val(file.id);\n        }\n        $html.insertBefore($source);\n    }\n\n    function onDropzoneQueueComplete(dropzone, kind) {\n        if(location.pathname.indexOf(\"new\") > 0) {\n            // save product media the traditional way via the save button when creating a new product\n            return;\n        }\n        const productId = $(\"#product-\" + kind + \"-section-dropzone\").data().product_id;\n        const $fileInputs = $(\"#product-\" + kind + \"-section\").find(\".file-control input\");\n        var fileIds = [];\n\n        for(var i = 0; i < $fileInputs.length; i++){\n            let fileId = parseInt($($fileInputs[i]).val());\n            if(!isNaN(fileId)) {\n                fileIds.push(parseInt($($fileInputs[i]).val()));\n            }\n        }\n        $.ajax({\n            url: \"/sa/products/\" + productId + \"/media/add/\",\n            method: \"POST\",\n            data: {\n                csrfmiddlewaretoken: ShuupAdminConfig.csrf,\n                product_id: productId,\n                file_ids: fileIds,\n                kind\n            },\n            traditional: true,\n            success: function(data) {\n                window.Messages.enqueue({tags: \"success\", text: data.message});\n            },\n            error: function(data) {\n                alert(\"ERROR\");\n            }\n        });\n    }\n\n    function onDropzoneSuccess($section, file) {\n        // file selected through dnd\n        if(file.xhr) {\n            file = JSON.parse(file.xhr.responseText).file;\n        }\n        addMediaPanel($section, file);\n    }\n\n    activateDropzone($(\"#product-images-section-dropzone\"), {\n        url: \"/sa/media/?action=upload&path=/products/images\",\n        maxFiles: 10,\n        onSuccess: function(file) {\n            onDropzoneSuccess($(\"#product-images-section\"), file);\n        },\n        onQueueComplete: function() {\n            onDropzoneQueueComplete(this, \"images\");\n        }\n    });\n\n    activateDropzone($(\"#product-media-section-dropzone\"), {\n        url: \"/sa/media/?action=upload&path=/products/media\",\n        maxFiles: 10,\n        onSuccess: function(file) {\n            onDropzoneSuccess($(\"#product-media-section\"), file);\n        },\n        onQueueComplete: function() {\n            onDropzoneQueueComplete(this, \"media\");\n        }\n    });\n});\n"],"sourceRoot":"/source/"}